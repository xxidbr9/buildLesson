{"version":3,"sources":["pages/TransactionList/index.jsx"],"names":["TransactionList","axios","defaults","baseURL","process","headers","common","userDetails","JSON","parse","localStorage","getItem","currency","country","useState","lists","set_lists","current","pageSize","pagination","set_pagination","loading","set_loading","is_fetched","set_is_fetched","columns","title","dataIndex","sorter","a","b","amount","sortDirections","render","text","formatCurrency","width","moment","format","user_transaction_columns","pvid","role","name","rec","booking","subjectInfo","subject","level","useQuery","GET_USER_TRANSACTIONS","variables","toLowerCase","onError","err","console","log","data","loadingUT","refetch","useEffect","email","fetch","useCallback","pgn","post","applicationName","limit","offset","list","map","l","key","id","total","className","gutter","dataSource","getUserTransactions","onChange","filters","extra","centered","style","margin","textAlign"],"mappings":"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","file":"static/js/74.219b6f7b.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\"\nimport moment from \"moment\"\nimport { useQuery } from \"react-apollo\"\nimport { Section, Layout } from \"components\"\nimport { Row, Col, Table, Typography } from \"antd\"\nimport axios from \"axios\"\nimport { GET_USER_TRANSACTIONS } from \"queries/user\"\nimport { formatCurrency } from \"helpers\"\n\nexport default function TransactionList() {\n\taxios.defaults.baseURL = process.env.REACT_APP_PAYMENT_URL\n\taxios.defaults.headers.common[\"api-key\"] = process.env.REACT_APP_PAYMENT_API_KEY\n\n\tconst userDetails = JSON.parse(localStorage.getItem(\"userDetails\")) || {}\n\tconst currency = userDetails.country === \"sg\" ? \"SGD\" : userDetails.country === \"id\" ? \"IDR\" : \"\"\n\n\tconst [lists, set_lists] = useState([])\n\tconst [pagination, set_pagination] = useState({\n\t\tcurrent: 1,\n\t\tpageSize: 10\n\t})\n\tconst [loading, set_loading] = useState(true)\n\tconst [is_fetched, set_is_fetched] = useState(false)\n\n\tconst columns = [\n\t\t{\n\t\t\ttitle: \"Payment ID\",\n\t\t\tdataIndex: \"id\"\n\t\t\t// sorter: (a, b) => a.id - b.id,\n\t\t\t// sortDirections: [\"descend\", \"ascend\"],\n\t\t\t// defaultSortOrder: \"descend\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Description\",\n\t\t\tdataIndex: \"description\"\n\t\t},\n\t\t{\n\t\t\ttitle: \"Amount\",\n\t\t\tdataIndex: \"amount\",\n\t\t\tsorter: (a, b) => a.amount - b.amount,\n\t\t\tsortDirections: [\"descend\", \"ascend\"],\n\t\t\trender: (text) => `${currency} ${formatCurrency(text)}`,\n\t\t\twidth: 150\n\t\t},\n\t\t{\n\t\t\ttitle: \"Booking ID\",\n\t\t\tdataIndex: \"booking_id\",\n\t\t\twidth: 150\n\t\t},\n\t\t{\n\t\t\ttitle: \"Created At\",\n\t\t\tdataIndex: \"createdAt\",\n\t\t\trender: (text) => `${moment(text).format(\"dddd, DD MMM YYYY hh:mm A\")}`\n\t\t},\n\t\t{\n\t\t\ttitle: \"Status\",\n\t\t\tdataIndex: \"status_payment.name\"\n\t\t}\n\t]\n\n\tconst user_transaction_columns = [\n\t\t{\n\t\t\ttitle: \"Transaction ID\",\n\t\t\tdataIndex: \"id\"\n\t\t},\n\t\t{\n\t\t\ttitle: `${userDetails.pvid && userDetails.role.name === \"Student\" ? \"Tutor's\" : \"Student's\"} name`,\n\t\t\tdataIndex: `${userDetails.pvid && userDetails.role.name === \"Student\" ? \"toUser.firstName\" : \"fromUser.firstName\"}`\n\t\t},\n\t\t{\n\t\t\ttitle: \"Class information\",\n\t\t\tdataIndex: \"booking.subjectInfo.pvid\",\n\t\t\trender: (text, rec) => `${rec.booking.subjectInfo.subject} ${rec.booking.subjectInfo.level}`\n\t\t},\n\t\t{\n\t\t\ttitle: \"Class time\",\n\t\t\tdataIndex: \"booking.startTime\",\n\t\t\trender: (text) => `${moment(text).format(\"dddd, DD MMM YYYY hh:mm A\")}`\n\t\t},\n\t\t{\n\t\t\ttitle: \"Amount\",\n\t\t\tdataIndex: \"booking.price\",\n\t\t\trender: (text) => `${currency} ${formatCurrency(text)}`,\n\t\t\twidth: 150\n\t\t},\n\t\t{\n\t\t\ttitle: \"Booking ID\",\n\t\t\tdataIndex: \"booking.pvid\",\n\t\t\twidth: 150\n\t\t},\n\t\t{\n\t\t\ttitle: \"Created At\",\n\t\t\tdataIndex: \"createdAt\",\n\t\t\trender: (text) => `${moment(text).format(\"dddd, DD MMM YYYY hh:mm A\")}`\n\t\t},\n\t\t{\n\t\t\ttitle: \"Status\",\n\t\t\tdataIndex: \"status\"\n\t\t}\n\t]\n\n\tconst { data, refetch, loading: loadingUT } = useQuery(GET_USER_TRANSACTIONS, {\n\t\tvariables: { role: userDetails.pvid ? userDetails.role.name.toLowerCase() : \"\" },\n\t\tonError(err) {\n\t\t\tconsole.log(\"GET_USER_TRANSACTIONS\", err)\n\t\t}\n\t})\n\n\tuseEffect(() => {\n\t\tif (!is_fetched) {\n\t\t\tif (userDetails.email) {\n\t\t\t\tfetch()\n\t\t\t} else {\n\t\t\t\tconsole.log(\"not auth\")\n\t\t\t\tset_loading(false)\n\t\t\t}\n\t\t\tset_is_fetched(true)\n\t\t}\n\t}, [is_fetched, userDetails.email, fetch])\n\n\tconst fetch = useCallback(async (pgn = pagination) => {\n\t\tset_loading(true)\n\t\ttry {\n\t\t\tconst {\n\t\t\t\tdata: { data }\n\t\t\t} = await axios.post(\"/payments/list/transaction\", {\n\t\t\t\temail: userDetails.email,\n\t\t\t\tapplicationName: \"cudy-i3\",\n\t\t\t\tlimit: pgn.pageSize,\n\t\t\t\toffset: (pgn.current - 1) * pgn.pageSize\n\t\t\t})\n\t\t\tset_lists(data.list.map((l) => ({ key: l.id, ...l })))\n\t\t\tset_pagination({ ...pagination, total: data.total })\n\t\t} catch (err) {\n\t\t\tconsole.log(\"fetch error\", err)\n\t\t}\n\t\tset_loading(false)\n\t})\n\n\tconst onChange = (pagination, filters, sorter, extra) => {\n\t\tset_pagination(pagination)\n\t\tfetch(pagination)\n\t}\n\n\tif (!userDetails.pvid) {\n\t\treturn (\n\t\t\t<Layout>\n\t\t\t\t<Section centered>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Typography style={{ margin: \"4em auto\", textAlign: \"center\" }}>You Must Login To Access This Page</Typography>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Section>\n\t\t\t</Layout>\n\t\t)\n\t}\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Section className=\"p2em\">\n\t\t\t\t<Row gutter={32}>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Typography>Transaction History</Typography>\n\t\t\t\t\t\t<Table loading={loadingUT} columns={user_transaction_columns} dataSource={data ? data.getUserTransactions : []} />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{userDetails.role.name === \"Student\" && (\n\t\t\t\t\t<Row gutter={32}>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Typography>Payment History</Typography>\n\t\t\t\t\t\t\t<Table loading={loading} columns={columns} dataSource={lists} onChange={onChange} pagination={pagination} />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t)}\n\t\t\t</Section>\n\t\t</Layout>\n\t)\n}\n"],"sourceRoot":""}