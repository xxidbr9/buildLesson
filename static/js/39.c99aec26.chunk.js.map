{"version":3,"sources":["queries/chat/index.js","components/common/Chat/Bubble.jsx","pages/Chats/index.jsx"],"names":["MUTATE_ADD_CHAT_SESSION","gql","QUERY_LIST_CHAT_ROOM","QUERY_LIST_CONVERSATION","MUTATE_ADD_CONVERSATION","StyledBubble","styled","isChatPage","sender","baseStyles","boxShadow","hover","lightGrey","one","Bubble","data","dateTime","moment","time","format","lg","autoHeight","noHover","className","Paragraph","message","Text","chatClient","newClient","profileClient","StyledTextInput","TextInput","ListItem","Item","greyColor","primaryColorRgba","SendInput","div","ChatContentSection","section","Chats","useState","listChatRoom","setListChatRoom","selectedChatRoom","setSelectedChatRoom","conversationList","setConversationList","setIsAddingMessage","searchValue","setSearchValue","userData","setUserData","useLocation","state","push","search","useHistory","token","localStorage","getItem","userFromProfile","useMutation","MUTATE_USER_PROFILE_HOME","client","onCompleted","getProfile","fetchProfile","useContext","SocketContext","socket","userDetails","onNewMessage","JSON","parse","mePvid","Number","pvid","sectionRef","useRef","useQuery","variables","roleUser","role","receiverId","userPvid","conversations","prev","chatRoomPvid","addConversation","emit","name","firstName","lastName","handleKeyUp","e","useEffect","country","current","scrollTo","scrollHeight","Object","keys","length","resource","path","avatar","on","console","log","newMessage","gutter","type","justify","Search","value","onChange","filtered","filter","toLowerCase","placeholder","itemLayout","dataSource","locale","emptyText","description","renderItem","item","onClick","handleJoinChat","Meta","title","src","SERVER_BASE_URL","createdAt","fromNow","align","size","level","marginBottom","content","ref","map","key","initialValues","senderName","isFirstTime","onSubmit","values","setSubmitting","resetForm","finally","handleSubmit","setFieldValue","layout","mb","onKeyUp","trigger","set","onSelect","emoji","native","aria-label"],"mappings":"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","file":"static/js/39.c99aec26.chunk.js","sourcesContent":["import gql from \"graphql-tag\"\n\nexport const MUTATE_ADD_CHAT_SESSION = gql`\n\tmutation MUTATE_ADD_CHAT_SESSION($receiver_id: Int!) {\n\t\taddChatRoom(receiver_id: $receiver_id) {\n\t\t\ttext\n\t\t\tsuccess\n\t\t\tchatParentId\n\t\t}\n\t}\n`\n\nexport const QUERY_LIST_CHAT_ROOM = gql`\n\tquery QUERY_LIST_CHAT_ROOM($roleUser: Int!) {\n\t\tlistChatRoom(roleUser: $roleUser) {\n\t\t\tchatRoomPvid\n\t\t\tuserPvid\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\tresource {\n\t\t\t\tpath\n\t\t\t}\n\t\t\tcreatedAt\n\t\t}\n\t}\n`\n\nexport const QUERY_LIST_CONVERSATION = gql`\n\tquery QUERY_LIST_CONVERSATION($receiverId: Int!) {\n\t\tconversationList(receiverId: $receiverId) {\n\t\t\tchatRoomPvid\n\t\t\tconversations {\n\t\t\t\tuserPvid\n\t\t\t\tname\n\t\t\t\tmessage\n\t\t\t\tcreatedAt\n\t\t\t}\n\t\t}\n\t}\n`\n\nexport const MUTATE_ADD_CONVERSATION = gql`\n\tmutation MUTATE_ADD_CONVERSATION(\n\t\t$chatRoomPvid: Int!\n\t\t$message: String!\n\t\t$senderName: String!\n\t\t$isFirstTime: Boolean!\n\t\t$studyCenterPvid: Int\n\t) {\n\t\taddConversation(\n\t\t\tchatRoomPvid: $chatRoomPvid\n\t\t\tmessage: $message\n\t\t\tsenderName: $senderName\n\t\t\tisFirstTime: $isFirstTime\n\t\t\tstudyCenterPvid: $studyCenterPvid\n\t\t) {\n\t\t\tchatRoomPvid\n\t\t\tname\n\t\t\tmessage\n\t\t\tcreatedAt\n\t\t\tuserPvid\n\t\t}\n\t}\n`\n","import React from \"react\"\nimport Card from \"components/Card\"\nimport styled from \"styled-components\"\nimport { Row, Col, Typography } from \"antd\"\nimport moment from \"moment\"\nimport { baseStyles } from \"styles/base\"\n\nconst StyledBubble = styled(Row)`\n\t.ant-card {\n\t\tmargin-bottom: 1em;\n\t\tmax-width: ${({ isChatPage }) => (isChatPage ? \"85%\" : \"75%\")};\n\t\tfloat: ${({ sender }) => (sender === \"me\" ? \"right\" : \"left\")};\n\t\tbox-shadow: none;\n\t\t/* box-shadow: ${baseStyles.boxShadow.hover}; */\n\t\t.ant-card-body {\n\t\t\tmargin-bottom: 0;\n\t\t\tpadding: 1em;\n\t\t\tfont-size: 1em;\n\t\t\tborder-radius: 8px;\n\t\t\tbackground: ${({ sender }) => (sender === \"me\" ? \"rgba(0, 55, 255, 0.16)\" : baseStyles.lightGrey.one)};\n\t\t}\n\t}\n`\n\nexport default function Bubble({ data, isChatPage }) {\n\tconst { sender } = data\n\tconst dateTime =\n\t\tmoment(data.time).format(\"DD MM YYYY\") === moment().format(\"DD MM YYYY\")\n\t\t\t? moment().format(\"HH:mm\")\n\t\t\t: moment(data.time).format(\"DD MMM - HH:mm\")\n\n\t// console.log({ time: moment(data.time).format(\"DD MM YYYY\"), momentToday: moment().format(\"DD MM YYYY\") })\n\n\treturn (\n\t\t<StyledBubble sender={sender} isChatPage={isChatPage}>\n\t\t\t<Col lg={24}>\n\t\t\t\t<Card autoHeight noHover className={sender === \"me\" ? \"ta-right\" : \"ta-left\"}>\n\t\t\t\t\t<Typography.Paragraph>{data.message}</Typography.Paragraph>\n\t\t\t\t\t<Typography.Text className=\"light-grey\">{dateTime}</Typography.Text>\n\t\t\t\t</Card>\n\t\t\t</Col>\n\t\t</StyledBubble>\n\t)\n}\n","import React, { useEffect, useRef, useContext } from \"react\"\nimport { Section, Heading, Empty, Layout, Button } from \"components\"\nimport { Row, Col, Input, List, Avatar, Form, Popover } from \"antd\"\nimport { useQuery, useMutation } from \"react-apollo\"\nimport { QUERY_LIST_CHAT_ROOM, QUERY_LIST_CONVERSATION, MUTATE_ADD_CONVERSATION } from \"queries/chat\"\nimport { newClient } from \"helpers\"\nimport { useState } from \"react\"\nimport moment from \"moment\"\nimport styled from \"styled-components/macro\"\nimport { baseStyles } from \"styles/base\"\nimport Bubble from \"components/common/Chat/Bubble\"\nimport FadeIn from \"react-fade-in\"\nimport { SocketContext } from \"App\"\nimport { MUTATE_USER_PROFILE_HOME } from \"queries/profile\"\nimport { Formik } from \"formik\"\nimport TextInput from \"components/forms/TextInput\"\nimport { useLocation, useHistory } from \"react-router\"\nimport { Picker } from \"emoji-mart\"\n\nimport \"emoji-mart/css/emoji-mart.css\"\nimport { country } from \"App\"\nimport { SERVER_BASE_URL } from \"helpers/constants\"\n\nconst chatClient = newClient(\"chat\")\nconst profileClient = newClient()\n\nconst StyledTextInput = styled(TextInput)`\n\tinput.ant-input {\n\t\theight: 42px;\n\t\tborder-radius: 8px;\n\t\tborder: none;\n\t}\n`\n\nconst ListItem = styled(List.Item)`\n\tcursor: pointer;\n\t.ant-list-item-meta {\n\t\t.ant-list-item-meta-content {\n\t\t\ttext-align: left;\n\t\t}\n\t}\n\t.datetime {\n\t\tcolor: ${baseStyles.greyColor};\n\t}\n\n\t&:hover {\n\t\tbackground-color: ${baseStyles.primaryColorRgba};\n\t}\n`\n\nconst SendInput = styled.div`\n\tposition: sticky;\n\tbottom: 0;\n\tleft: 0;\n\t.ant-form {\n\t\tpadding: 2em 0;\n\t\tbackground-color: #f0f2f5;\n\t\t.ant-form-explain {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n`\n\nconst ChatContentSection = styled.section`\n\theight: 80vh;\n\toverflow-y: scroll;\n`\n\nexport default function Chats() {\n\tconst [listChatRoom, setListChatRoom] = useState([])\n\tconst [selectedChatRoom, setSelectedChatRoom] = useState({})\n\tconst [conversationList, setConversationList] = useState([])\n\tconst [isAddingMessage, setIsAddingMessage] = useState(false)\n\tconst [searchValue, setSearchValue] = useState(\"\")\n\tconst [userData, setUserData] = useState({})\n\tconst { state = {}, search } = useLocation()\n\tconst { push } = useHistory()\n\tconst token = localStorage.getItem(\"token\")\n\n\tlet userFromProfile = state.userData || {}\n\n\tconst [fetchProfile] = useMutation(MUTATE_USER_PROFILE_HOME, {\n\t\tclient: profileClient,\n\t\tonCompleted: (data) => {\n\t\t\tdata = data.getProfile || {}\n\t\t\tsetUserData(data)\n\t\t}\n\t})\n\n\tconst { socket, onNewMessage } = useContext(SocketContext)\n\n\tconst userDetails = JSON.parse(localStorage.getItem(\"userDetails\")) || {}\n\tconst mePvid = Number(userDetails.pvid)\n\n\tconst sectionRef = useRef(null)\n\n\tuseQuery(QUERY_LIST_CHAT_ROOM, {\n\t\tclient: chatClient,\n\t\tvariables: { roleUser: Number((userDetails.role || {}).pvid) },\n\t\tonCompleted: (data) => {\n\t\t\tdata = data.listChatRoom\n\t\t\tsetListChatRoom(data)\n\t\t}\n\t})\n\n\tuseQuery(QUERY_LIST_CONVERSATION, {\n\t\tclient: chatClient,\n\t\tvariables: { receiverId: /* Number(userFromProfile.pvid) || */ Number(selectedChatRoom.userPvid) },\n\t\tonCompleted: (data) => {\n\t\t\tdata = data.conversationList || {}\n\t\t\tsetConversationList(data.conversations)\n\t\t\tsetSelectedChatRoom((prev) => ({ ...prev, chatRoomPvid: data.chatRoomPvid }))\n\t\t}\n\t})\n\n\tconst [addConversation] = useMutation(MUTATE_ADD_CONVERSATION, {\n\t\tclient: chatClient,\n\t\tonCompleted: (data) => {\n\t\t\tdata = data.addConversation || {}\n\t\t\t// setConversationList(prev => [...prev, { ...data, userPvid: mePvid, sender: \"me\" }].filter(item => !isNaN(item.userPvid)))\n\t\t\tsocket.emit(\"new_message\", {\n\t\t\t\tchatRoomPvid: Number(selectedChatRoom.chatRoomPvid),\n\t\t\t\tname: userData.firstName + \" \" + userData.lastName,\n\t\t\t\tmessage: data.message,\n\t\t\t\tuserPvid: mePvid\n\t\t\t})\n\t\t}\n\t})\n\n\tconst handleSearchChat = (value) => {\n\t\tconst filtered = listChatRoom.filter(({ firstName, lastName }) => {\n\t\t\tconst userName = (firstName + \" \" + lastName).toLowerCase()\n\t\t\treturn userName === value\n\t\t})\n\t\tsetSearchValue(value)\n\t\tsetListChatRoom(filtered)\n\t}\n\n\tconst handleAddConversation = (values, { setSubmitting, resetForm }) => {\n\t\tsetIsAddingMessage(true)\n\t\tvalues = { ...values, chatRoomPvid: Number(selectedChatRoom.chatRoomPvid) }\n\t\taddConversation({ variables: values }).finally(() => {\n\t\t\tsetSubmitting(false)\n\t\t\tresetForm({})\n\t\t})\n\t}\n\n\tconst handleJoinChat = (item) => {\n\t\tsetSelectedChatRoom(item)\n\t\tsectionRef.current && sectionRef.current.scrollTo(0, sectionRef.current.scrollHeight)\n\t\tsocket.emit(\"join_chat_room\", { chatRoomPvid: item.chatRoomPvid })\n\t}\n\n\tconst handleKeyUp = (e) => {\n\t\tsocket.emit(\"typing_in_chat_room\", {\n\t\t\tchatRoomPvid: Number(selectedChatRoom.chatRoomPvid),\n\t\t\tfirstName: userData.firstName,\n\t\t\tlastName: userData.lastName\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tif (!token) {\n\t\t\tpush(`/${country}/login`)\n\t\t}\n\n\t\tif (sectionRef.current && selectedChatRoom.firstName) {\n\t\t\tsectionRef.current.scrollTo(0, sectionRef.current.scrollHeight)\n\t\t}\n\t}, [push, selectedChatRoom.firstName, token])\n\n\tuseEffect(() => {\n\t\tif (Object.keys(userFromProfile).length > 0) {\n\t\t\tsetSelectedChatRoom({\n\t\t\t\tuserPvid: userFromProfile.pvid,\n\t\t\t\tfirstName: userFromProfile.firstName,\n\t\t\t\tlastName: userFromProfile.lastName,\n\t\t\t\tresource: { path: userFromProfile.avatar[userFromProfile.avatar.length - 1].path }\n\t\t\t})\n\t\t}\n\n\t\tsocket.on(\"new_message\", (message) => {\n\t\t\tconsole.log({ newMessage: message })\n\t\t\tsetConversationList((prev) => [\n\t\t\t\t...prev,\n\t\t\t\t{ ...message, chatRoomPvid: Number(message.chatRoomPvid), userPvid: Number(message.userPvid) }\n\t\t\t])\n\t\t\tsectionRef.current && sectionRef.current.scrollTo(0, sectionRef.current.scrollHeight)\n\t\t})\n\n\t\tfetchProfile()\n\t}, [socket])\n\n\t// console.log({ listChatRoom, conversationList, userFromProfile, selectedChatRoom, userData })\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Section className=\"p2em\">\n\t\t\t\t<Row gutter={64} type=\"flex\" justify=\"center\">\n\t\t\t\t\t<Col lg={6} className=\"ta-center border-right\">\n\t\t\t\t\t\t<Input.Search\n\t\t\t\t\t\t\tvalue={searchValue}\n\t\t\t\t\t\t\tonChange={handleSearchChat}\n\t\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\t\tplaceholder=\"Search the chats...\"\n\t\t\t\t\t\t\tclassName=\"mb2em\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<List\n\t\t\t\t\t\t\titemLayout=\"horizontal\"\n\t\t\t\t\t\t\tdataSource={listChatRoom}\n\t\t\t\t\t\t\tlocale={{\n\t\t\t\t\t\t\t\temptyText: <Empty description=\"No chat found\" />\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\trenderItem={(item) => (\n\t\t\t\t\t\t\t\t<ListItem onClick={() => handleJoinChat(item)}>\n\t\t\t\t\t\t\t\t\t<List.Item.Meta\n\t\t\t\t\t\t\t\t\t\ttitle={item.firstName + \" \" + item.lastName}\n\t\t\t\t\t\t\t\t\t\tavatar={<Avatar src={SERVER_BASE_URL + item.resource.path} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className=\"datetime\">{moment(item.createdAt).fromNow()}</div>\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col lg={14}>\n\t\t\t\t\t\t<Row type=\"flex\" align=\"middle\" className=\"mb1em\">\n\t\t\t\t\t\t\t{selectedChatRoom.firstName && (\n\t\t\t\t\t\t\t\t<Col lg={2}>\n\t\t\t\t\t\t\t\t\t<Avatar size=\"large\" src={SERVER_BASE_URL + (selectedChatRoom.resource || {}).path} />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Col lg={10}>\n\t\t\t\t\t\t\t\t<Heading\n\t\t\t\t\t\t\t\t\tlevel={4}\n\t\t\t\t\t\t\t\t\tmarginBottom=\"0\"\n\t\t\t\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t\t\t\t!selectedChatRoom.firstName\n\t\t\t\t\t\t\t\t\t\t\t? \"Select person to chat\"\n\t\t\t\t\t\t\t\t\t\t\t: selectedChatRoom.firstName + \" \" + selectedChatRoom.lastName\n\t\t\t\t\t\t\t\t\t} /* subheader=\"Sun, 21 Jan 2020\" */\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t{/* {selectedChatRoom.chatRoomPvid ? ( */}\n\t\t\t\t\t\t<ChatContentSection ref={sectionRef}>\n\t\t\t\t\t\t\t{conversationList.length === 0 ? (\n\t\t\t\t\t\t\t\t<Empty\n\t\t\t\t\t\t\t\t\tdescription={\n\t\t\t\t\t\t\t\t\t\tselectedChatRoom.firstName ? (\n\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\tStart chatting with <strong>{selectedChatRoom.firstName}</strong>\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\"No chat found\"\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tconversationList.map((item) => (\n\t\t\t\t\t\t\t\t\t<FadeIn key={item.createdAt}>\n\t\t\t\t\t\t\t\t\t\t<Bubble\n\t\t\t\t\t\t\t\t\t\t\tkey={item.createdAt}\n\t\t\t\t\t\t\t\t\t\t\tisChatPage={true}\n\t\t\t\t\t\t\t\t\t\t\tdata={{ ...item, time: item.createdAt, sender: item.userPvid === mePvid ? \"me\" : \"them\" }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</FadeIn>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ChatContentSection>\n\t\t\t\t\t\t{/* // ) : (\n\t\t\t\t\t\t// \t<Loading />\n\t\t\t\t\t\t// )} */}\n\t\t\t\t\t\t{selectedChatRoom.firstName && (\n\t\t\t\t\t\t\t<SendInput>\n\t\t\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\t\t\t\t\tmessage: \"\",\n\t\t\t\t\t\t\t\t\t\tsenderName: userData.firstName + \" \" + userData.lastName,\n\t\t\t\t\t\t\t\t\t\tsender: \"me\",\n\t\t\t\t\t\t\t\t\t\tisFirstTime: false\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonSubmit={handleAddConversation}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{({ handleSubmit, setFieldValue, values }) => (\n\t\t\t\t\t\t\t\t\t\t<Form layout=\"vertical\" onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t\t<Row gutter={16}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Col lg={20}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledTextInput\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"message\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Type your message...\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmb=\"0\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonKeyUp={handleKeyUp}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t<Col lg={4}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Popover\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Emoji\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrigger=\"click\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Picker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tset=\"apple\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonSelect={(emoji) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\"message\", values.message + emoji.native)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button type=\"default\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span role=\"img\" aria-label=\"Smile\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t😄\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Formik>\n\t\t\t\t\t\t\t</SendInput>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Section>\n\t\t</Layout>\n\t)\n}\n"],"sourceRoot":""}