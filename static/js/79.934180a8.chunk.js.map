{"version":3,"sources":["pages/Tutor/Profile/WhoViewed.jsx"],"names":["StyledList","styled","baseStyles","greyColor","profileClient","newClient","WhoViewed","useState","viewedList","setViewedList","startWeek","useQuery","queryWhoViewedMe","client","onCompleted","data","listWhoViewedProfile","listWhoViewed","loading","moment","startOf","endWeek","endOf","days","day","push","toDate","clone","add","map","item","format","getDaysOfWeek","width","mobile","style","margin","bold","content","subheader","marginBottom","level","autoHeight","paddingHorizontal","itemLayout","dataSource","renderItem","isAnon","firstName","viewerName","lastName","viewerRole","roleName","viewerLocation","address","Item","Meta","avatar","src","SERVER_BASE_URL","resource","path","title","className","to","country","profileViewedDate","description"],"mappings":"4kBAeA,IAAMA,EAAaC,YAAO,IAAPA,CAAH,IAIHC,IAAWC,UAEVD,IAAWC,WAUnBC,EAAgBC,cAEP,SAASC,IAAa,IAAD,EACCC,mBAAS,IADV,mBAC5BC,EAD4B,KAChBC,EADgB,KAU7BC,GARcC,YAASC,IAAkB,CAC9CC,OAAQT,EACRU,YAAa,SAACC,GACbA,GAAQA,EAAKC,sBAAwB,IAAIC,cACzCR,EAAcM,MAJRG,QAQUC,MAASC,QAAQ,YAC7BC,EAAUF,MAASG,MAAM,YAET,WAIrB,IAHA,IAAIC,EAAO,GACPC,EAAMd,EAEHc,GAAOH,GACbE,EAAKE,KAAKD,EAAIE,UACdF,EAAMA,EAAIG,QAAQC,IAAI,EAAG,KAGnBL,EAAKM,KAAI,SAACC,GAAD,OAAUX,IAAOW,GAAMC,OAAO,kBAG9BC,GAEjB,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAASC,MAAOC,IAAS,OAAS,MAAOC,MAAO,CAAEC,OAAQ,WACzD,kBAAC,IAAD,CACCC,MAAI,EACJC,QAAS,kBAAC,QAAD,yBACTC,UAAW,kBAAC,QAAD,kDACXC,aAAa,MACbC,MAAO,IAER,kBAAC,IAAD,CAAMC,YAAU,GACf,kBAAC,IAAD,CAASC,kBAAmB,EAAGH,aAAa,UAC3C,kBAAC,IAAD,CAASF,QAAS,kBAAC,QAAD,kBAA0BG,MAAO,IACnD,kBAACzC,EAAD,CACC4C,WAAW,aACXC,WAAYrC,EACZsC,WAAY,SAAChB,GACZ,IAAMiB,EAA4B,cAAnBjB,EAAKkB,UACdC,EAAaF,EAAS,YAAcjB,EAAKkB,UAAY,IAAMlB,EAAKoB,SAChEC,EAAaJ,EAAS,YAAcjB,EAAKsB,SACzCC,EAAiBN,EAAS,YAAcjB,EAAKwB,QAEnD,OACC,sBAAMC,KAAN,KACC,sBAAMA,KAAKC,KAAX,CACCC,OAAQ,kBAAC,IAAD,CAAQC,IAAKC,IAAkB7B,EAAK8B,SAASC,OACrDC,MACC,uBAAGC,UAAU,QACZ,kBAAC,IAAD,CAAMC,GAAE,WAAMC,MAAYhB,GAD3B,kBACiE,IAChE,8BAAO9B,IAAOW,EAAKoC,mBAAmBnC,OAAO,iBAG/CoC,YACC,2BACEhB,EADF,mBACiC,8BAAOE","file":"static/js/79.934180a8.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport { Layout, Section, Heading, Card, Avatar } from \"components\"\nimport { List } from \"antd\"\nimport { dummyWhoViewed } from \"dummy\"\nimport moment from \"moment\"\nimport styled from \"styled-components\"\nimport { Link } from \"react-router-dom\"\nimport { baseStyles } from \"styles/base\"\nimport { mobile, newClient } from \"helpers\"\nimport { Trans } from \"@lingui/macro\"\nimport { country } from \"App\"\nimport { useQuery } from \"react-apollo\"\nimport { queryWhoViewedMe } from \"queries/profile\"\nimport { SERVER_BASE_URL } from \"helpers/constants\"\n\nconst StyledList = styled(List)`\n\t.ant-list-item-meta {\n\t\t.ant-list-item-meta-title {\n\t\t\t.name {\n\t\t\t\tcolor: ${baseStyles.greyColor};\n\t\t\t\tspan {\n\t\t\t\t\tcolor: ${baseStyles.greyColor};\n\t\t\t\t}\n\t\t\t}\n\t\t\tp {\n\t\t\t\tmargin-bottom: 0;\n\t\t\t}\n\t\t}\n\t}\n`\n\nconst profileClient = newClient()\n\nexport default function WhoViewed() {\n\tconst [viewedList, setViewedList] = useState([])\n\tconst { loading } = useQuery(queryWhoViewedMe, {\n\t\tclient: profileClient,\n\t\tonCompleted: (data) => {\n\t\t\tdata = (data.listWhoViewedProfile || {}).listWhoViewed\n\t\t\tsetViewedList(data)\n\t\t}\n\t})\n\t// prettier-ignore\n\tconst startWeek = moment().startOf(\"isoWeek\")\n\tconst endWeek = moment().endOf(\"isoWeek\")\n\n\tconst getDaysOfWeek = () => {\n\t\tlet days = []\n\t\tlet day = startWeek\n\n\t\twhile (day <= endWeek) {\n\t\t\tdays.push(day.toDate())\n\t\t\tday = day.clone().add(1, \"d\")\n\t\t}\n\n\t\treturn days.map((item) => moment(item).format(\"DD MMM YYYY\"))\n\t}\n\n\tconst thisWeek = getDaysOfWeek()\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Section width={mobile ? \"100%\" : \"50%\"} style={{ margin: \"0 auto\" }}>\n\t\t\t\t<Heading\n\t\t\t\t\tbold\n\t\t\t\t\tcontent={<Trans>Who's viewed you</Trans>}\n\t\t\t\t\tsubheader={<Trans>See who has viewed your Profile recently.</Trans>}\n\t\t\t\t\tmarginBottom=\"3em\"\n\t\t\t\t\tlevel={4}\n\t\t\t\t/>\n\t\t\t\t<Card autoHeight>\n\t\t\t\t\t<Section paddingHorizontal={0} marginBottom=\"padded\">\n\t\t\t\t\t\t<Heading content={<Trans>This week</Trans>} level={4} />\n\t\t\t\t\t\t<StyledList\n\t\t\t\t\t\t\titemLayout=\"horizontal\"\n\t\t\t\t\t\t\tdataSource={viewedList}\n\t\t\t\t\t\t\trenderItem={(item) => {\n\t\t\t\t\t\t\t\tconst isAnon = item.firstName === \"Anonymous\"\n\t\t\t\t\t\t\t\tconst viewerName = isAnon ? \"Anonymous\" : item.firstName + \" \" + item.lastName\n\t\t\t\t\t\t\t\tconst viewerRole = isAnon ? \"Anonymous\" : item.roleName\n\t\t\t\t\t\t\t\tconst viewerLocation = isAnon ? \"Anonymous\" : item.address\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t\t\t<List.Item.Meta\n\t\t\t\t\t\t\t\t\t\t\tavatar={<Avatar src={SERVER_BASE_URL + item.resource.path} />}\n\t\t\t\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"name\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/${country}`}>{viewerName}</Link> &nbsp;&bull;&nbsp;{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{moment(item.profileViewedDate).format(\"DD MMM YYYY\")}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tdescription={\n\t\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{viewerRole} &nbsp;&bull;&nbsp; <span>{viewerLocation}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Section>\n\t\t\t\t</Card>\n\t\t\t</Section>\n\t\t</Layout>\n\t)\n}\n"],"sourceRoot":""}