{"version":3,"sources":["store/actions/placesActions.js","pages/StudyPlaces/index.jsx"],"names":["loadingPlaces","condition","type","types","payload","fetchNearbyPlaces","typePvid","currentCountry","lat","lng","country","userPvid","radius","dispatch","toLowerCase","countryName","countryMap","name","error","onClick","handleChangeLanguage","size","className","icon","destroy","instance","get","then","data","isDifferentCountry","catch","err","response","status","fetchNearbyPlacesGoogle","keyword","results","renderError","searchPlaces","typeId","fetchPlaceDetails","placeId","console","errPlaces","fetchPlaceTypes","fetchTuitionCategories","searchTuition","searchNearbyTuition","fetchTuitionById","tuitionId","StudyCenter","React","lazy","PlaceDetails","Places","MainSection","styled","Section","attrs","paddingHorizontal","media","mobile","TheMenu","motion","ul","MainRow","menuVariants","visible","opacity","transition","delay","staggerChildren","menuItemVariants","y","stiffness","velocity","hidden","menuItems","key","label","connect","place","nearbyGoogle","places","pageToken","loading","photo","pathname","useLocation","history","useHistory","pathArray","split","currentSection","isDetailsPage","length","lg","marginBottom","width","push","variants","initial","animate","map","item","li","to","fallback","exact","from","path","component","render"],"mappings":"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","file":"static/js/50.84335af1.chunk.js","sourcesContent":["import React from \"react\"\nimport { instance, renderError } from \"helpers\"\nimport * as types from \"../constants\"\nimport { message, Icon } from \"antd\"\nimport { countryMap } from \"helpers/countryMapping\"\nimport { ButtonLink } from \"components\"\nimport { handleChangeLanguage } from \"App\"\nimport { Button } from \"components\"\n\nexport const loadingPlaces = (condition = true) => ({\n\ttype: types.LOADING_PLACES,\n\tpayload: { condition }\n})\n\n// STUDY PLACES!!!\n\nexport const fetchNearbyPlaces = ({ lat, lng, country, userPvid, radius = 10 }, typePvid, currentCountry) => (dispatch) => {\n\tdispatch(loadingPlaces())\n\tcountry = country.toLowerCase()\n\tcurrentCountry = currentCountry.toLowerCase()\n\tconst countryName = (countryMap[currentCountry] || {}).name\n\n\tif (currentCountry && country !== currentCountry) {\n\t\tmessage.error(\n\t\t\t<span>\n\t\t\t\tYou are currently in {countryName}.{\" \"}\n\t\t\t\t<ButtonLink onClick={() => handleChangeLanguage(currentCountry)}>Switch to {countryName}?</ButtonLink> &nbsp;{\" \"}\n\t\t\t\t<Button type=\"link\" size=\"small\" className=\"primary bg-transparent\" icon=\"close\" onClick={() => message.destroy()} />\n\t\t\t</span>,\n\t\t\t0\n\t\t)\n\t\tdispatch({ type: types.FETCH_NEARBY_PLACES_ERROR, payload: `You are currently in ${countryName}` })\n\t}\n\n\tif (lat && lng) {\n\t\treturn instance\n\t\t\t.get(\n\t\t\t\t`/nearbysearch/study/places?latitude=${lat}&longitude=${lng}&radius=${radius}&typePvid=${typePvid}&userPvid=${userPvid}&country=${country}`\n\t\t\t)\n\t\t\t.then(({ data }) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: types.FETCH_NEARBY_PLACES,\n\t\t\t\t\tpayload: { data: data.data, isDifferentCountry: country !== currentCountry }\n\t\t\t\t})\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: types.FETCH_NEARBY_PLACES_ERROR,\n\t\t\t\t\tpayload: null\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tdispatch({ type: types.FETCH_NEARBY_PLACES_ERROR, payload: err.response.status })\n\t\t\t})\n\t}\n}\n\nexport const fetchNearbyPlacesGoogle = ({ lat, lng, radius = 10, country, type }, keyword = \"\") => (dispatch) => {\n\tif (lat && lng) {\n\t\treturn instance\n\t\t\t.get(`/${country}/nearby-search?latLng=${lat},${lng}&radius=${radius}&type=${type}&keyword=${keyword}`)\n\t\t\t.then(({ data }) => dispatch({ type: types.FETCH_NEARBY_PLACES_GOOGLE, payload: data.data.results }))\n\t\t\t.catch((err) => renderError(err.response))\n\t}\n}\n\nexport const searchPlaces = (keyword, typeId, country, userPvid = 0) => (dispatch) => {\n\tdispatch(loadingPlaces())\n\treturn instance\n\t\t.get(`/find/study/places?name=${keyword}&typePvid=${typeId}&userPvid=${userPvid}&country=${country}`)\n\t\t.then(({ data }) => dispatch({ type: types.SEARCH_PLACES, payload: data.data }))\n\t\t.catch((err) => renderError(err.response))\n}\n\nexport const fetchPlaceDetails = (placeId, userPvid = 0) => (dispatch) => {\n\tdispatch(loadingPlaces())\n\treturn instance\n\t\t.get(`/get/detail/study/places?studyPlacePvid=${placeId}&userPvid=${userPvid}`)\n\t\t.then(({ data }) => dispatch({ type: types.FETCH_PLACE_DETAILS, payload: data.data }))\n\t\t.catch((err) => {\n\t\t\tconsole.error({ errPlaces: err.response })\n\t\t\trenderError(err.response)\n\t\t})\n}\n\nexport const fetchPlaceTypes = (country = \"sg\") => (dispatch) => {\n\tdispatch(loadingPlaces())\n\treturn instance\n\t\t.get(`/get/type/study/places?country=${country}`)\n\t\t.then(({ data }) => dispatch({ type: types.FETCH_PLACE_TYPES, payload: data.data }))\n\t\t.catch((err) => renderError(err.response))\n}\n\nexport const fetchNearbyPlaceDetails = (placeId, country = \"sg\") => (dispatch) => {\n\tdispatch(loadingPlaces())\n\treturn instance\n\t\t.get(`/${country}/nearby-search/detail?placeId=${placeId}`)\n\t\t.then(({ data }) => dispatch({ type: types.FETCH_NEARBY_PLACE_DETAILS, payload: data.data.result }))\n\t\t.catch((err) => renderError(err.response))\n}\n\n// TUITION CENTER!!!\n\nexport const fetchTuitionCategories = () => (dispatch) => {\n\tdispatch(loadingPlaces())\n\treturn instance\n\t\t.get(`/get/category/private/tuition`)\n\t\t.then(({ data }) => dispatch({ type: types.FETCH_TUITION_CATEGORIES, payload: data.data }))\n\t\t.catch((err) => renderError(err.response))\n}\n\nexport const searchTuition = (keyword, country, userPvid = 0) => (dispatch) => {\n\tdispatch(loadingPlaces())\n\treturn instance\n\t\t.get(`/find/study-center?name=${keyword}&country=${country}&userPvid=${userPvid}`)\n\t\t.then(({ data }) => dispatch({ type: types.SEARCH_TUITION, payload: data.data }))\n\t\t.catch((err) => renderError(err.response))\n}\n\nexport const searchNearbyTuition = ({ lat, lng, radius = 10, country }, currentCountry, userPvid = 0) => (dispatch) => {\n\tdispatch(loadingPlaces())\n\tcurrentCountry = currentCountry.toLowerCase()\n\tcountry = country.toLowerCase()\n\tconst countryName = (countryMap[currentCountry] || {}).name\n\n\tif (currentCountry && country !== currentCountry) {\n\t\tmessage.error(\n\t\t\t<span>\n\t\t\t\tYou are currently in {countryName}.{\" \"}\n\t\t\t\t<ButtonLink onClick={() => handleChangeLanguage(currentCountry)}>Switch to {countryName}?</ButtonLink>\n\t\t\t</span>,\n\t\t\t0\n\t\t)\n\t\tdispatch({ type: types.SEARCH_NEARBY_TUITION_ERROR, payload: `You are currently in ${countryName}` })\n\t}\n\treturn instance\n\t\t.get(`/nearbysearch/study-center?latitude=${lat}&longitude=${lng}&radius=${radius}&userPvid=${userPvid}&country=${country}`)\n\t\t.then(({ data }) => dispatch({ type: types.SEARCH_NEARBY_TUITION, payload: data.data }))\n\t\t.catch((err) => renderError(err.response))\n}\n\nexport const fetchTuitionById = (tuitionId, userPvid = 0) => (dispatch) => {\n\tdispatch(loadingPlaces())\n\treturn instance\n\t\t.get(`/get/detail/study-center?tuitionPvid=${tuitionId}&userPvid=${userPvid}`)\n\t\t.then(({ data }) => dispatch({ type: types.FETCH_TUITION_BY_ID, payload: data.data }))\n\t\t.catch((err) => renderError(err.response))\n}\n","import React, { Suspense } from \"react\"\nimport { Row, Col } from \"antd\"\nimport { Section, Logo } from \"components\"\nimport styled from \"styled-components/macro\"\nimport { connect } from \"react-redux\"\nimport { searchPlaces, fetchNearbyPlaces, fetchNearbyPlacesGoogle } from \"store/actions/placesActions\"\nimport { Switch, Route, Redirect, NavLink, useLocation, useHistory } from \"react-router-dom\"\nimport { motion } from \"framer-motion\"\nimport { Trans } from \"@lingui/macro\"\n\nimport { country } from \"App\"\nimport { Layout } from \"components\"\nimport { media, mobile } from \"helpers\"\nimport Loading from \"components/Loading\"\n\nconst StudyCenter = React.lazy(() => import(\"./StudyCenter\"))\nconst PlaceDetails = React.lazy(() => import(\"./PlaceDetails\"))\nconst Places = React.lazy(() => import(\"./Places\"))\n\nconst MainSection = styled(Section).attrs({\n\tpaddingHorizontal: 0,\n})`\n\tbackground-color: #fff;\n\n\t${media.mobile`\n\t\tmargin-bottom: 0;\n\t`}\n`\n\nconst TheMenu = styled(motion.ul)`\n\t&& {\n\t\theight: 100vh;\n\t\tborder-right: none;\n\t\t.ant-menu-item {\n\t\t\tpadding-left: 2px;\n\t\t\tfont-weight: bold;\n\t\t\theight: 25px;\n\t\t\tline-height: 1;\n\t\t\ta:not(.active) {\n\t\t\t\topacity: 0.3;\n\t\t\t\t&:hover {\n\t\t\t\t\topacity: initial;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t${media.mobile`\n\t\t&& {\n\t\t\theight: auto;\n\t\t}\n\t`}\n`\n\nconst MainRow = styled(Row)`\n\t.left-section {\n\t\tposition: relative;\n\t\theight: 100%;\n\t\toverflow-y: hidden;\n\t}\n\t.right-section {\n\t\toverflow-y: scroll;\n\t\theight: 100vh;\n\t}\n`\n\nconst menuVariants = {\n\tvisible: {\n\t\topacity: 1,\n\t\ttransition: {\n\t\t\tdelay: 3,\n\t\t\tstaggerChildren: 0.2,\n\t\t\t// delayChildren: 0.15\n\t\t},\n\t},\n}\n\nconst menuItemVariants = {\n\tvisible: {\n\t\ty: 0,\n\t\topacity: 1,\n\t\ttransition: { stiffness: 1000, velocity: -100 },\n\t},\n\thidden: { y: 50, opacity: 0 },\n}\n\nconst menuItems = [\n\t{ key: \"places\", label: <Trans>Places</Trans> },\n\t{ key: \"tuition\", label: <Trans>Tuition center</Trans> },\n]\n\n// const paramsPlaceDetails = JSON.parse(localStorage.getItem(\"paramsPlaceDetails\"))\n\nfunction StudyPlaces() {\n\tconst { pathname } = useLocation()\n\tconst history = useHistory()\n\tconst pathArray = pathname.split(\"/\") || []\n\tconst currentSection = pathArray[3] || \"\"\n\tconst isDetailsPage = pathArray.length > 4\n\n\treturn (\n\t\t<Layout>\n\t\t\t<MainRow>\n\t\t\t\t{!isDetailsPage && (\n\t\t\t\t\t<Col lg={6} className=\"left-section\">\n\t\t\t\t\t\t<MainSection>\n\t\t\t\t\t\t\t{!mobile && (\n\t\t\t\t\t\t\t\t<Section marginBottom={0} className=\"pb0\">\n\t\t\t\t\t\t\t\t\t<Logo width={70} onClick={() => history.push(`/${country}`)} />\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Section className=\"mb0\">\n\t\t\t\t\t\t\t\t<TheMenu\n\t\t\t\t\t\t\t\t\tclassName=\"ant-menu ant-menu-light ant-menu-root ant-menu-vertical\"\n\t\t\t\t\t\t\t\t\tvariants={menuVariants}\n\t\t\t\t\t\t\t\t\tinitial=\"hidden\"\n\t\t\t\t\t\t\t\t\tanimate=\"visible\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{menuItems.map((item) => (\n\t\t\t\t\t\t\t\t\t\t<motion.li key={item.key} variants={menuItemVariants} className=\"ant-menu-item\">\n\t\t\t\t\t\t\t\t\t\t\t<NavLink to={`/${country}/study_places/${item.key}`}>{item.label}</NavLink>\n\t\t\t\t\t\t\t\t\t\t</motion.li>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</TheMenu>\n\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t</MainSection>\n\t\t\t\t\t</Col>\n\t\t\t\t)}\n\t\t\t\t<Col lg={isDetailsPage ? 24 : 18} className=\"right-section\">\n\t\t\t\t\t<Suspense fallback={<Loading />}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Redirect exact from=\"/:country/study_places\" to=\"/:country/study_places/places\" />\n\t\t\t\t\t\t\t<Route exact path=\"/:country/study_places/places\" component={Places} />\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath=\"/:country/study_places/places/:name--:pvid\"\n\t\t\t\t\t\t\t\trender={() => <PlaceDetails currentSection={currentSection} />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route exact path=\"/:country/study_places/tuition\" component={StudyCenter} />\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath=\"/:country/study_places/tuition/:name--:pvid\"\n\t\t\t\t\t\t\t\trender={() => <PlaceDetails currentSection={currentSection} />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Suspense>\n\t\t\t\t</Col>\n\t\t\t</MainRow>\n\t\t</Layout>\n\t)\n}\n\nconst mapState = ({ place }) => ({\n\tnearbyGoogle: place.nearbyGoogle,\n\tplaces: place.places || [],\n\tpageToken: place.pageToken,\n\tloading: place.loading,\n\tphoto: place.photo,\n})\n\n// prettier-ignore\nexport default connect( mapState, { searchPlaces, fetchNearbyPlaces, fetchNearbyPlacesGoogle } )(StudyPlaces)\n"],"sourceRoot":""}