{"version":3,"sources":["pages/ResendVerification/index.jsx"],"names":["accountClient","newClient","validate","i18n","values","error","email","test","_","withI18n","withRouter","history","useMutation","mutateSendVerificationEmail","client","onCompleted","data","push","pathname","country","state","success","onError","err","renderError","setSend","type","justify","align","lg","centered","to","alt","src","width","autoHeight","noHover","style","padding","level","content","subheader","marginBottom","onSubmit","setSubmitting","variables","finally","initialValues","handleSubmit","layout","name","placeholder","label","size","icon"],"mappings":"iRAcMA,EAAgBC,YAAU,WAqEhC,IAAMC,EAAW,SAAAC,GAAI,OAAI,SAAAC,GACxB,IAAMC,EAAQ,GAKd,OAHKD,EAAOE,MACF,4CAA4CC,KAAKH,EAAOE,SAAQD,EAAMC,MAAQH,EAAKK,EAAE,8CAD5EH,EAAMC,MAAQH,EAAKK,EAAE,yBAGjCH,IAGOI,+BAAWC,aA5E1B,YAAgD,IAAlBC,EAAiB,EAAjBA,QAASR,EAAQ,EAARA,KAAQ,EAC5BS,YAAYC,IAA6B,CAC1DC,OAAQd,EACRe,YAAa,SAAAC,GACRA,GACHL,EAAQM,KAAK,CACZC,SAAS,IAAD,OAAMC,IAAN,iCACRC,MAAO,CAAEC,SAAS,MAGrBC,QAAS,SAAAC,GACJA,GAAKC,YAAYD,MAVhBE,EADuC,oBAmB9C,OACC,uBAAKC,KAAK,OAAOC,QAAQ,SAASC,MAAM,UACvC,uBAAKC,GAAI,IACR,kBAAC,IAAD,CAASC,UAAQ,GAChB,kBAAC,IAAD,CAAMC,GAAE,WAAMZ,MACb,yBAAKa,IAAI,GAAGC,IAAI,wCAAwCC,MAAM,UAGhE,kBAAC,IAAD,CAAMC,YAAU,EAACC,SAAO,EAACC,MAAO,CAAEC,QAAS,cAC1C,kBAAC,IAAD,CACCC,MAAO,EACPC,QAAS,kBAAC,QAAD,qBACTC,UACC,kBAAC,QAAD,wIAKDC,aAAa,QAEd,kBAAC,IAAD,CAAQC,SAxBO,SAACvC,EAAD,GAAgC,IAArBwC,EAAoB,EAApBA,cAC7BnB,EAAQ,CAAEoB,UAAW,CAAEvC,MAAOF,EAAOE,SAAWwC,SAAQ,kBAAMF,GAAc,OAuB3C1C,SAAUA,EAASC,GAAO4C,cAAe,CAAEzC,MAAO,MAC9E,gBAAG0C,EAAH,EAAGA,aAAH,OACA,uBAAML,SAAUK,EAAcC,OAAO,WAAWZ,MAAO,CAAEK,aAAc,QACtE,kBAAC,IAAD,CACCQ,KAAK,QACLxB,KAAK,QACLyB,YAAahD,EAAKK,EAAE,oCACpB4C,MAAO,kBAAC,QAAD,qBAER,kBAAC,IAAD,CAAc1B,KAAK,UAAU2B,KAAK,SAASC,KAAK,SAAhD,QACQ,kBAAC,QAAD,2CAMZ,kBAAC,IAAD,CAASxB,UAAQ,GAChB,kBAAC,IAAD,CAAMC,GAAE,WAAMZ,IAAN,WACP,kBAAC,IAAD,CAAYmC,KAAK,QAAjB,QACQ,kBAAC,QAAD","file":"static/js/68.0bdbcd42.chunk.js","sourcesContent":["import React from \"react\"\nimport { Section, Card, Heading, ButtonLink } from \"components\"\nimport { Row, Col, Form } from \"antd\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport { Formik } from \"formik\"\nimport TextInput from \"components/forms/TextInput\"\nimport { SubmitButton } from \"formik-antd\"\nimport { useMutation } from \"@apollo/react-hooks\"\nimport { mutateSendVerificationEmail } from \"queries/auth\"\nimport { newClient, renderError } from \"helpers\"\nimport { Trans, t } from \"@lingui/macro\"\nimport { withI18n } from \"@lingui/react\"\nimport { country } from \"App\"\n\nconst accountClient = newClient(\"account\")\n\nfunction ResendVerification({ history, i18n }) {\n\tconst [setSend] = useMutation(mutateSendVerificationEmail, {\n\t\tclient: accountClient,\n\t\tonCompleted: data => {\n\t\t\tif (data)\n\t\t\t\thistory.push({\n\t\t\t\t\tpathname: `/${country}/account/resend_email/success`,\n\t\t\t\t\tstate: { success: true }\n\t\t\t\t})\n\t\t},\n\t\tonError: err => {\n\t\t\tif (err) renderError(err)\n\t\t}\n\t})\n\n\tconst handleSend = (values, { setSubmitting }) => {\n\t\tsetSend({ variables: { email: values.email } }).finally(() => setSubmitting(false))\n\t}\n\n\treturn (\n\t\t<Row type=\"flex\" justify=\"center\" align=\"middle\">\n\t\t\t<Col lg={10}>\n\t\t\t\t<Section centered>\n\t\t\t\t\t<Link to={`/${country}`}>\n\t\t\t\t\t\t<img alt=\"\" src=\"https://app.cudy.co/img/logo_live.png\" width=\"100\" />\n\t\t\t\t\t</Link>\n\t\t\t\t</Section>\n\t\t\t\t<Card autoHeight noHover style={{ padding: \"1.5em 2em\" }}>\n\t\t\t\t\t<Heading\n\t\t\t\t\t\tlevel={4}\n\t\t\t\t\t\tcontent={<Trans>Resend email</Trans>}\n\t\t\t\t\t\tsubheader={\n\t\t\t\t\t\t\t<Trans>\n\t\t\t\t\t\t\t\tIf you didn't see any email verification we sent to you, then please enter your email address once again,\n\t\t\t\t\t\t\t\tand we'll send a copy\n\t\t\t\t\t\t\t</Trans>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmarginBottom=\"3em\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Formik onSubmit={handleSend} validate={validate(i18n)} initialValues={{ email: \"\" }}>\n\t\t\t\t\t\t{({ handleSubmit }) => (\n\t\t\t\t\t\t\t<Form onSubmit={handleSubmit} layout=\"vertical\" style={{ marginBottom: \"2em\" }}>\n\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tplaceholder={i18n._(t`E.g. jennysalim@example.com`)}\n\t\t\t\t\t\t\t\t\tlabel={<Trans>Your email</Trans>}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<SubmitButton type=\"primary\" size=\"medium\" icon=\"check\">\n\t\t\t\t\t\t\t\t\t&nbsp; <Trans>Send me the email once again</Trans>\n\t\t\t\t\t\t\t\t</SubmitButton>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Formik>\n\t\t\t\t</Card>\n\t\t\t\t<Section centered>\n\t\t\t\t\t<Link to={`/${country}/login`}>\n\t\t\t\t\t\t<ButtonLink icon=\"user\">\n\t\t\t\t\t\t\t&nbsp; <Trans>Go to login</Trans>\n\t\t\t\t\t\t</ButtonLink>\n\t\t\t\t\t</Link>\n\t\t\t\t</Section>\n\t\t\t</Col>\n\t\t</Row>\n\t)\n}\n\nconst validate = i18n => values => {\n\tconst error = {}\n\n\tif (!values.email) error.email = i18n._(t`This is required`)\n\telse if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) error.email = i18n._(t`Please provide a valid email address`)\n\n\treturn error\n}\n\nexport default withI18n()(withRouter(ResendVerification))\n"],"sourceRoot":""}