{"version":3,"sources":["../tag/CheckableTag.jsx","../tag/index.jsx","../tag/style/index.jsx","pages/Tutor/Profile/Skills.jsx"],"names":["__rest","s","e","t","Object","i","p","CheckableTag","checked","onChange","getPrefixCls","_a","customizePrefixCls","className","restProps","prefixCls","cls","classNames","onClick","handleClick","this","React","PresetColorRegex","RegExp","PresetColorTypes","Tag","visible","children","otherProps","isNeedWave","tagProps","omit","style","warning","nextProps","color","isPresetColor","backgroundColor","undefined","onClose","afterClose","type","handleIconClick","closable","polyfill","withI18n","onEditMode","onSkills","fetchUser","loadingSkills","unauthorizedUser","i18n","editMode","setEditMode","skills","useState","setSelectedItems","skillsData","setSkillsData","useMutation","mutateUpdateSkills","client","profileClient","onCompleted","data","onError","err","renderError","updateSkills","mutateDeleteSkills","deleteSkills","MUTATE_FIND_SKILLS","mapped","findSkills","map","item","value","title","label","fetchSkills","loadingSkillsData","loading","useEffect","variables","filter","paddingHorizontal","noPadding","mobile","marginBottom","centered","length","description","pvid","randomColor","coolColors","key","icon","initialValues","existing","onSubmit","values","setSubmitting","deletedItems","includes","isThere","find","pvidList","list","finally","handleSubmit","layout","name","mode","placeholder","_","options","filterOption","input","props","toLowerCase","indexOf","size"],"mappings":"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","file":"static/js/33.f250a7ab.chunk.js","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nexport default class CheckableTag extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleClick = () => {\n            const { checked, onChange } = this.props;\n            if (onChange) {\n                onChange(!checked);\n            }\n        };\n        this.renderCheckableTag = ({ getPrefixCls }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, className, checked } = _a, restProps = __rest(_a, [\"prefixCls\", \"className\", \"checked\"]);\n            const prefixCls = getPrefixCls('tag', customizePrefixCls);\n            const cls = classNames(prefixCls, {\n                [`${prefixCls}-checkable`]: true,\n                [`${prefixCls}-checkable-checked`]: checked,\n            }, className);\n            delete restProps.onChange; // TypeScript cannot check delete now.\n            return <span {...restProps} className={cls} onClick={this.handleClick}/>;\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderCheckableTag}</ConfigConsumer>;\n    }\n}\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Icon from '../icon';\nimport CheckableTag from './CheckableTag';\nimport { ConfigConsumer } from '../config-provider';\nimport { PresetColorTypes } from '../_util/colors';\nimport warning from '../_util/warning';\nimport Wave from '../_util/wave';\nconst PresetColorRegex = new RegExp(`^(${PresetColorTypes.join('|')})(-inverse)?$`);\nclass Tag extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: true,\n        };\n        this.handleIconClick = (e) => {\n            e.stopPropagation();\n            this.setVisible(false, e);\n        };\n        this.renderTag = (configProps) => {\n            const _a = this.props, { children } = _a, otherProps = __rest(_a, [\"children\"]);\n            const isNeedWave = 'onClick' in otherProps || (children && children.type === 'a');\n            const tagProps = omit(otherProps, [\n                'onClose',\n                'afterClose',\n                'color',\n                'visible',\n                'closable',\n                'prefixCls',\n            ]);\n            return isNeedWave ? (<Wave>\n        <span {...tagProps} className={this.getTagClassName(configProps)} style={this.getTagStyle()}>\n          {children}\n          {this.renderCloseIcon()}\n        </span>\n      </Wave>) : (<span {...tagProps} className={this.getTagClassName(configProps)} style={this.getTagStyle()}>\n        {children}\n        {this.renderCloseIcon()}\n      </span>);\n        };\n        warning(!('afterClose' in props), 'Tag', \"'afterClose' will be deprecated, please use 'onClose', we will remove this in the next version.\");\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('visible' in nextProps) {\n            return {\n                visible: nextProps.visible,\n            };\n        }\n        return null;\n    }\n    getTagStyle() {\n        const { color, style } = this.props;\n        const isPresetColor = this.isPresetColor();\n        return Object.assign({ backgroundColor: color && !isPresetColor ? color : undefined }, style);\n    }\n    getTagClassName({ getPrefixCls }) {\n        const { prefixCls: customizePrefixCls, className, color } = this.props;\n        const { visible } = this.state;\n        const isPresetColor = this.isPresetColor();\n        const prefixCls = getPrefixCls('tag', customizePrefixCls);\n        return classNames(prefixCls, {\n            [`${prefixCls}-${color}`]: isPresetColor,\n            [`${prefixCls}-has-color`]: color && !isPresetColor,\n            [`${prefixCls}-hidden`]: !visible,\n        }, className);\n    }\n    setVisible(visible, e) {\n        const { onClose, afterClose } = this.props;\n        if (onClose) {\n            onClose(e);\n        }\n        if (afterClose && !onClose) {\n            // next version remove.\n            afterClose();\n        }\n        if (e.defaultPrevented) {\n            return;\n        }\n        if (!('visible' in this.props)) {\n            this.setState({ visible });\n        }\n    }\n    isPresetColor() {\n        const { color } = this.props;\n        if (!color) {\n            return false;\n        }\n        return PresetColorRegex.test(color);\n    }\n    renderCloseIcon() {\n        const { closable } = this.props;\n        return closable ? <Icon type=\"close\" onClick={this.handleIconClick}/> : null;\n    }\n    render() {\n        return <ConfigConsumer>{this.renderTag}</ConfigConsumer>;\n    }\n}\nTag.CheckableTag = CheckableTag;\nTag.defaultProps = {\n    closable: false,\n};\npolyfill(Tag);\nexport default Tag;\n","import '../../style/index.less';\nimport './index.less';\n","import React, { useState, useEffect } from \"react\"\nimport { Section, Button, ButtonLink, Empty, Loading } from \"components\"\nimport { Form, Tag } from \"antd\"\n\nimport { randomColor, client, renderError, mobile } from \"helpers\"\nimport { coolColors } from \"dummy\"\nimport SelectInput from \"components/forms/SelectInput\"\nimport { useMutation } from \"react-apollo\"\nimport { mutateUpdateSkills, mutateDeleteSkills, MUTATE_FIND_SKILLS } from \"queries/profile\"\nimport { Trans, t } from \"@lingui/macro\"\nimport { withI18n } from \"@lingui/react\"\nimport { Formik } from \"formik\"\nimport { SubmitButton } from \"formik-antd\"\n\nfunction Skills({ onEditMode, onSkills, fetchUser, loadingSkills, unauthorizedUser, i18n }) {\n\tconst { editMode, setEditMode } = onEditMode\n\tconst { skills = [] } = onSkills\n\tconst [selectedItems, setSelectedItems] = useState(skills)\n\tconst [skillsData, setSkillsData] = useState([])\n\n\tconst [updateSkills] = useMutation(mutateUpdateSkills, {\n\t\tclient: client.profileClient,\n\t\tonCompleted: data => {\n\t\t\tfetchUser()\n\t\t\tsetEditMode(false)\n\t\t},\n\t\tonError: err => renderError(err)\n\t})\n\n\tconst [deleteSkills] = useMutation(mutateDeleteSkills, {\n\t\tclient: client.profileClient,\n\t\tonError: err => renderError(err)\n\t})\n\n\tconst [fetchSkills, { loading: loadingSkillsData }] = useMutation(MUTATE_FIND_SKILLS, {\n\t\tclient: client.profileClient,\n\t\tonCompleted: data => {\n\t\t\tdata = data.findSkills || []\n\t\t\tconst mapped = data.map(item => ({ value: item.title, label: item.title }))\n\t\t\tsetSkillsData(mapped)\n\t\t}\n\t})\n\n\tconst handleSaveSkills = (values, { setSubmitting }) => {\n\t\tconst deletedItems = values.existing.filter(({ title }) => !(values.skills || []).includes(title))\n\t\tvalues = {\n\t\t\t...values,\n\t\t\tskills: (values.skills || []).map(item => {\n\t\t\t\tconst isThere = values.existing.find(({ title }) => title === item)\n\t\t\t\treturn { pvid: isThere ? isThere.pvid : \"\", title: item }\n\t\t\t})\n\t\t}\n\t\tdeleteSkills({ variables: { pvidList: deletedItems.map(item => item.pvid) } })\n\t\tupdateSkills({ variables: { list: values.skills } }).finally(() => setSubmitting(false))\n\t}\n\n\tuseEffect(() => {\n\t\tfetchSkills({ variables: { filter: \"x\" } })\n\t\tsetSelectedItems(skills)\n\t}, [fetchSkills, skills])\n\n\t// prettier-ignore\n\tif (loadingSkills) return <Loading />\n\n\treturn (\n\t\t<Section paddingHorizontal={0} noPadding={mobile} marginBottom={0}>\n\t\t\t{editMode === \"skills\" && !unauthorizedUser ? (\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\tskills: skills.map(({ title }) => title),\n\t\t\t\t\t\texisting: skills\n\t\t\t\t\t}}\n\t\t\t\t\tonSubmit={handleSaveSkills}\n\t\t\t\t>\n\t\t\t\t\t{({ handleSubmit }) => (\n\t\t\t\t\t\t<Form layout=\"vertical\" onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\t\tname=\"skills\"\n\t\t\t\t\t\t\t\tmode=\"tags\"\n\t\t\t\t\t\t\t\tplaceholder={i18n._(t`Your skills`)}\n\t\t\t\t\t\t\t\toptions={skillsData}\n\t\t\t\t\t\t\t\tloading={loadingSkillsData}\n\t\t\t\t\t\t\t\tlabel={<Trans>Enter your skills</Trans>}\n\t\t\t\t\t\t\t\tfilterOption={(input, { props }) => {\n\t\t\t\t\t\t\t\t\tconst { children } = props\n\t\t\t\t\t\t\t\t\tconst option = (children.props.children || \"\").toLowerCase()\n\t\t\t\t\t\t\t\t\treturn option.indexOf(input.toLowerCase()) !== -1\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<SubmitButton type=\"primary\">\n\t\t\t\t\t\t\t\t<Trans>Save changes</Trans>\n\t\t\t\t\t\t\t</SubmitButton>{\" \"}\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t<ButtonLink size=\"small\" onClick={() => setEditMode(false)}>\n\t\t\t\t\t\t\t\t<Trans>Cancel</Trans>\n\t\t\t\t\t\t\t</ButtonLink>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t{unauthorizedUser ? (\n\t\t\t\t\t\t<Section paddingHorizontal={0} marginBottom={0} centered>\n\t\t\t\t\t\t\t{skills.length === 0 ? (\n\t\t\t\t\t\t\t\t<Empty description={<Trans>This tutor didn't specify any skills yet</Trans>} />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tskills.map(({ pvid, title }) => {\n\t\t\t\t\t\t\t\t\tconst color = randomColor(coolColors)\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Tag key={pvid} color={color} style={{ marginBottom: \".7em\" }}>\n\t\t\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t\t\t</Tag>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Section>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{loadingSkills ? (\n\t\t\t\t\t\t\t\t<Loading />\n\t\t\t\t\t\t\t) : skills.length === 0 ? (\n\t\t\t\t\t\t\t\t<Section paddingHorizontal={0} marginBottom={0} centered>\n\t\t\t\t\t\t\t\t\t<Empty description={<Trans>You didn't specify any skills yet</Trans>} />\n\t\t\t\t\t\t\t\t\t<Button type=\"primary\" icon=\"plus\" onClick={() => setEditMode(\"skills\")}>\n\t\t\t\t\t\t\t\t\t\t&nbsp; <Trans>Add one</Trans>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tskills.map(({ pvid, title }) => {\n\t\t\t\t\t\t\t\t\tconst color = randomColor(coolColors)\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Tag key={pvid} color={color} style={{ marginBottom: \".7em\" }}>\n\t\t\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t\t\t</Tag>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</Section>\n\t)\n}\n\nexport default withI18n()(Skills)\n"],"sourceRoot":""}