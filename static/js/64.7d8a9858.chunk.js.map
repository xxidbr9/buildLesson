{"version":3,"sources":["pages/ForgotPassword/index.jsx"],"names":["validate","i18n","values","error","email","test","_","withI18n","withRouter","history","useState","setEmail","useMutation","mutateForgotPassword","client","newClient","onCompleted","data","loading","then","push","pathname","country","state","success","onError","err","renderError","handleForgot","type","justify","align","lg","centered","to","alt","src","width","title","autoHeight","paddingHorizontal","content","subheader","marginBottom","initialValues","onSubmit","variables","handleSubmit","layout","name","label","placeholder","background","htmlType","disabled","theme"],"mappings":"uSAoFA,IAAMA,EAAW,SAAAC,GAAI,OAAI,SAAAC,GACxB,IAAMC,EAAQ,GAKd,OAHKD,EAAOE,MACF,4CAA4CC,KAAKH,EAAOE,SAAQD,EAAMC,MAAQH,EAAKK,EAAE,8CAD5EH,EAAMC,MAAQH,EAAKK,EAAE,wCAGjCH,IAGOI,+BAAWC,aA/E1B,YAA4C,IAAlBC,EAAiB,EAAjBA,QAASR,EAAQ,EAARA,KAAQ,EAChBS,mBAAS,IADO,mBACnCN,EADmC,KAC5BO,EAD4B,OAGnBC,YAAYC,IAAsB,CACxDC,OAAQC,YAAU,WAClBC,YAAa,SAAAC,GACZ,IAAQC,QAAQjB,EAAKK,EAAE,iCAA6Ba,MAAK,WACpDF,GACHR,EAAQW,KAAK,CACZC,SAAS,IAAD,OAAMC,IAAN,gBACRC,MAAO,CAAEC,SAAS,EAAMpB,eAK5BqB,QAAS,SAAAC,GAAG,OAAIC,YAAYD,MAZtBE,EAHmC,oBAuB1C,OACC,kBAAC,IAAD,KACC,uBAAKC,KAAK,OAAOC,QAAQ,SAASC,MAAM,UACvC,uBAAKC,GAAI,IACR,kBAAC,IAAD,CAASC,UAAQ,GAChB,kBAAC,IAAD,CAAMC,GAAE,WAAMZ,MACb,yBAAKa,IAAI,GAAGC,IAAI,wCAAwCC,MAAM,UAGhE,kBAAC,IAAD,CAAMC,MAAM,GAAGC,YAAU,GACxB,kBAAC,IAAD,CAASC,kBAAkB,UAC1B,kBAAC,IAAD,CACCC,QAAS,kBAAC,QAAD,wBACTC,UAAW,kBAAC,QAAD,yEACXC,aAAa,QAEd,kBAAC,IAAD,CAAQ3C,SAAUA,EAASC,GAAO2C,cAAe,CAAExC,MAAO,IAAMyC,SArB3C,SAAA3C,GAC1BS,EAAST,EAAOE,OAChBwB,EAAa,CAAEkB,UAAW,CAAE1C,MAAOF,EAAOE,YAoBnC,gBAAG2C,EAAH,EAAGA,aAAc7C,EAAjB,EAAiBA,OAAjB,OACA,uBAAM2C,SAAUE,EAAcC,OAAO,YACpC,kBAAC,IAAD,CACCnB,KAAK,QACLoB,KAAK,QACLC,MAAO,kBAAC,QAAD,mBACPC,YAAalD,EAAKK,EAAE,gDACpB8C,WAAW,YAEZ,kBAAC,IAAD,CAAQC,SAAS,SAASxB,KAAK,UAAUyB,UAAWpD,EAAOE,OAC1D,kBAAC,QAAD,mCAON,kBAAC,IAAD,CAAS6B,UAAQ,GAChB,kBAAC,IAAD,CAAMC,GAAE,WAAMZ,MACb,kBAAC,QAAD,yCACC,uBAAMO,KAAK,OAAO0B,MAAM","file":"static/js/64.7d8a9858.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport { Formik } from \"formik\"\nimport { Form, Row, Col, Icon, message } from \"antd\"\nimport { Trans, t } from \"@lingui/macro\"\nimport { withI18n } from \"@lingui/react\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport { useMutation } from \"@apollo/react-hooks\"\n\nimport { Heading, Card, Section, Button } from \"components\"\nimport TextInput from \"components/forms/TextInput\"\nimport { mutateForgotPassword } from \"queries/auth\"\nimport { newClient, renderError } from \"helpers\"\nimport { country } from \"App\"\n\nfunction ForgotPassword({ history, i18n }) {\n\tconst [email, setEmail] = useState(\"\")\n\n\tconst [handleForgot] = useMutation(mutateForgotPassword, {\n\t\tclient: newClient(\"account\"),\n\t\tonCompleted: data => {\n\t\t\tmessage.loading(i18n._(t`Please wait a second...`)).then(() => {\n\t\t\t\tif (data) {\n\t\t\t\t\thistory.push({\n\t\t\t\t\t\tpathname: `/${country}/forgot/sent`,\n\t\t\t\t\t\tstate: { success: true, email }\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tonError: err => renderError(err)\n\t})\n\n\tconst handleSubmitForgot = values => {\n\t\tsetEmail(values.email)\n\t\thandleForgot({ variables: { email: values.email } })\n\t}\n\n\treturn (\n\t\t<Section>\n\t\t\t<Row type=\"flex\" justify=\"center\" align=\"middle\">\n\t\t\t\t<Col lg={12}>\n\t\t\t\t\t<Section centered>\n\t\t\t\t\t\t<Link to={`/${country}`}>\n\t\t\t\t\t\t\t<img alt=\"\" src=\"https://app.cudy.co/img/logo_live.png\" width=\"100\" />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Section>\n\t\t\t\t\t<Card title=\"\" autoHeight>\n\t\t\t\t\t\t<Section paddingHorizontal=\"normal\">\n\t\t\t\t\t\t\t<Heading\n\t\t\t\t\t\t\t\tcontent={<Trans>Forgot password</Trans>}\n\t\t\t\t\t\t\t\tsubheader={<Trans>Forgot your password? Don't panic. Just tell us your email here.</Trans>}\n\t\t\t\t\t\t\t\tmarginBottom=\"2em\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Formik validate={validate(i18n)} initialValues={{ email: \"\" }} onSubmit={handleSubmitForgot}>\n\t\t\t\t\t\t\t\t{({ handleSubmit, values }) => (\n\t\t\t\t\t\t\t\t\t<Form onSubmit={handleSubmit} layout=\"vertical\">\n\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tlabel={<Trans>Your email</Trans>}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={i18n._(t`Enter the email you used to access Cudy`)}\n\t\t\t\t\t\t\t\t\t\t\tbackground=\"#f3f3f3\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Button htmlType=\"submit\" type=\"primary\" disabled={!values.email}>\n\t\t\t\t\t\t\t\t\t\t\t<Trans>Recover my password</Trans>\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Formik>\n\t\t\t\t\t\t</Section>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<Section centered>\n\t\t\t\t\t\t<Link to={`/${country}`}>\n\t\t\t\t\t\t\t<Trans>\n\t\t\t\t\t\t\t\t<Icon type=\"home\" theme=\"filled\" /> &nbsp; Back to Home\n\t\t\t\t\t\t\t</Trans>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Section>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Section>\n\t)\n}\n\nconst validate = i18n => values => {\n\tconst error = {}\n\n\tif (!values.email) error.email = i18n._(t`Please enter your email address`)\n\telse if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) error.email = i18n._(t`Please provide a valid email address`)\n\n\treturn error\n}\n\nexport default withI18n()(withRouter(ForgotPassword))\n"],"sourceRoot":""}