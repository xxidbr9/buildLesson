{"version":3,"sources":["components/common/Chat/Bubble.jsx","components/common/Chat/index.jsx"],"names":["StyledBubble","styled","isChatPage","sender","baseStyles","boxShadow","hover","lightGrey","one","Bubble","data","dateTime","moment","time","format","lg","autoHeight","noHover","className","Paragraph","message","Text","StyledChat","motion","div","main","HidingIcon","span","greyColor","ReceiverHeading","Heading","attrs","level","marginBottom","StyledForm","cardVariants","hidden","opacity","y","visible","Chat","onChatWindow","useState","chatList","setData","setChatWindow","chatWindow","variants","animate","initial","onClick","type","gutter","align","src","content","subheader","justify","map","item","key","id","centered","onSubmit","values","setSubmitting","resetForm","prev","initialValues","handleSubmit","layout","size","mb","name","placeholder"],"mappings":"4lBAOA,IAAMA,EAAeC,YAAO,IAAPA,CAAH,KAGH,qBAAGC,WAA+B,MAAQ,SAC9C,kBAA4B,OAA5B,EAAGC,OAAgC,QAAU,SAErCC,IAAWC,UAAUC,OAMvB,kBAA4B,OAA5B,EAAGH,OAAgC,yBAA2BC,IAAWG,UAAUC,OAKrF,SAASC,EAAT,GAAuC,IAArBC,EAAoB,EAApBA,KAAMR,EAAc,EAAdA,WAC9BC,EAAWO,EAAXP,OACFQ,EACLC,IAAOF,EAAKG,MAAMC,OAAO,gBAAkBF,MAASE,OAAO,cACxDF,MAASE,OAAO,SAChBF,IAAOF,EAAKG,MAAMC,OAAO,kBAI7B,OACC,kBAACd,EAAD,CAAcG,OAAQA,EAAQD,WAAYA,GACzC,uBAAKa,GAAI,IACR,kBAAC,IAAD,CAAMC,YAAU,EAACC,SAAO,EAACC,UAAsB,OAAXf,EAAkB,WAAa,WAClE,sBAAYgB,UAAZ,KAAuBT,EAAKU,SAC5B,sBAAYC,KAAZ,CAAiBH,UAAU,cAAcP,Q,sTCvBxCW,EAAarB,YAAOsB,IAAOC,KAAjB,uEAAGvB,CAAH,gPAWDG,IAAWC,UAAUoB,MAQ9BC,EAAazB,IAAO0B,KAAV,uEAAG1B,CAAH,mEAKNG,IAAWwB,WAGfC,EAAkB5B,YAAO6B,KAASC,MAAM,CAC7CC,MAAO,EACPC,aAAc,MAFM,4EAAGhC,CAAH,uCASfiC,EAAajC,YAAO,KAAV,uEAAGA,CAAH,iIAcVkC,EAAe,CACpBC,OAAQ,CAAEC,QAAS,EAAGC,EAAG,KACzBC,QAAS,CAAEF,QAAS,EAAGC,EAAG,IAGZ,SAASE,EAAT,GAAiC,IAAjBC,EAAgB,EAAhBA,aAAgB,EACtBC,mBAASC,KADa,mBACvCjC,EADuC,KACjCkC,EADiC,KAE1BC,GAAkBJ,EAA9BK,WAA8BL,EAAlBI,eASpB,OACC,kBAACvB,EAAD,CAAYyB,SAAUZ,EAAca,QAAQ,UAAUC,QAAQ,UAC7D,kBAACvB,EAAD,CAAYwB,QAAS,kBAAML,GAAc,KACxC,uBAAMM,KAAK,UAGZ,uBAAKC,OAAQ,GAAID,KAAK,OAAOE,MAAM,SAASnC,UAAU,gBACrD,uBAAKH,GAAI,GACR,kBAAC,IAAD,CAAQuC,IAAI,yCAEb,uBAAKvC,GAAI,IACR,kBAACc,EAAD,CAAiB0B,QAAQ,WAAWC,UAAU,qBAIhD,uBAAKL,KAAK,OAAOM,QAAQ,UACxB,uBAAK1C,GAAI,KACNL,GAAQ,IAAIgD,KAAI,SAAAC,GAAI,OACrB,kBAAC,IAAD,CAAQC,IAAKD,EAAKE,GAAInD,KAAMiD,OAE7B,kBAAC,IAAD,CAASG,UAAQ,GAChB,sBAAYzC,KAAZ,CAAiBH,UAAU,sBAA3B,0BAKH,kBAAC,IAAD,CAAQ6C,SAjCW,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAC9CF,EAAM,eAAQA,EAAR,CAAgBnD,KAAMD,MAAUuC,KAAM,OAAQU,GAAI,EAAG1D,OAAQ,OACnEyC,GAAQ,SAAAuB,GAAI,4BAAQA,GAAR,CAAcH,OAC1BC,GAAc,GACdC,EAAU,KA6BuBE,cAAe,CAAEhD,QAAS,MACxD,gBAAGiD,EAAH,EAAGA,aAAH,OACA,kBAACnC,EAAD,CAAYoC,OAAO,WAAWpD,UAAU,QAAQ6C,SAAUM,GACzD,kBAAC,IAAD,CAAWnD,UAAU,UAAUqD,KAAK,QAAQC,GAAG,IAAIC,KAAK,UAAUC,YAAY","file":"static/js/43.0986f2eb.chunk.js","sourcesContent":["import React from \"react\"\nimport Card from \"components/Card\"\nimport styled from \"styled-components\"\nimport { Row, Col, Typography } from \"antd\"\nimport moment from \"moment\"\nimport { baseStyles } from \"styles/base\"\n\nconst StyledBubble = styled(Row)`\n\t.ant-card {\n\t\tmargin-bottom: 1em;\n\t\tmax-width: ${({ isChatPage }) => (isChatPage ? \"85%\" : \"75%\")};\n\t\tfloat: ${({ sender }) => (sender === \"me\" ? \"right\" : \"left\")};\n\t\tbox-shadow: none;\n\t\t/* box-shadow: ${baseStyles.boxShadow.hover}; */\n\t\t.ant-card-body {\n\t\t\tmargin-bottom: 0;\n\t\t\tpadding: 1em;\n\t\t\tfont-size: 1em;\n\t\t\tborder-radius: 8px;\n\t\t\tbackground: ${({ sender }) => (sender === \"me\" ? \"rgba(0, 55, 255, 0.16)\" : baseStyles.lightGrey.one)};\n\t\t}\n\t}\n`\n\nexport default function Bubble({ data, isChatPage }) {\n\tconst { sender } = data\n\tconst dateTime =\n\t\tmoment(data.time).format(\"DD MM YYYY\") === moment().format(\"DD MM YYYY\")\n\t\t\t? moment().format(\"HH:mm\")\n\t\t\t: moment(data.time).format(\"DD MMM - HH:mm\")\n\n\t// console.log({ time: moment(data.time).format(\"DD MM YYYY\"), momentToday: moment().format(\"DD MM YYYY\") })\n\n\treturn (\n\t\t<StyledBubble sender={sender} isChatPage={isChatPage}>\n\t\t\t<Col lg={24}>\n\t\t\t\t<Card autoHeight noHover className={sender === \"me\" ? \"ta-right\" : \"ta-left\"}>\n\t\t\t\t\t<Typography.Paragraph>{data.message}</Typography.Paragraph>\n\t\t\t\t\t<Typography.Text className=\"light-grey\">{dateTime}</Typography.Text>\n\t\t\t\t</Card>\n\t\t\t</Col>\n\t\t</StyledBubble>\n\t)\n}\n","import React, { useState } from \"react\"\nimport styled from \"styled-components/macro\"\nimport { motion } from \"framer-motion\"\nimport { Row, Col, Icon, Form, Typography } from \"antd\"\nimport Avatar from \"components/Avatar\"\nimport Heading from \"components/Heading\"\nimport { baseStyles } from \"styles/base\"\nimport { Formik } from \"formik\"\nimport TextInput from \"components/forms/TextInput\"\nimport { chatList } from \"dummy\"\n// import Card from \"components/Card\"\nimport Bubble from \"./Bubble\"\nimport moment from \"moment\"\nimport Section from \"components/Section\"\n\nconst StyledChat = styled(motion.div)`\n\tposition: fixed;\n\tleft: 2rem;\n\tbottom: 1rem;\n\tborder-radius: 8px;\n\tpadding: 0;\n\theight: 400px;\n\tbackground-color: #fff;\n\twidth: 250px;\n\toverflow-y: scroll;\n\tz-index: 2;\n\tbox-shadow: ${baseStyles.boxShadow.main};\n\t.receiver-bar {\n\t\tborder-bottom: 1px solid #ddd;\n\t\tpadding: 1em 1.5em;\n\t\tmargin-bottom: 1em;\n\t}\n`\n\nconst HidingIcon = styled.span`\n\tposition: absolute;\n\tright: 10px;\n\ttop: 5px;\n\tcursor: pointer;\n\tcolor: ${baseStyles.greyColor};\n`\n\nconst ReceiverHeading = styled(Heading).attrs({\n\tlevel: 4,\n\tmarginBottom: \"0\"\n})`\n\th4.ant-typography {\n\t\tfont-size: 1em;\n\t}\n`\n\nconst StyledForm = styled(Form)`\n\tposition: sticky;\n\tbottom: 0;\n\twidth: 100%;\n\tpadding: 0;\n\t.message {\n\t\tmargin-bottom: 0;\n\t\tborder: transparent;\n\t\t.ant-form-explain {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n`\n\nconst cardVariants = {\n\thidden: { opacity: 0, y: 100 },\n\tvisible: { opacity: 1, y: 0 }\n}\n\nexport default function Chat({ onChatWindow }) {\n\tconst [data, setData] = useState(chatList)\n\tconst { chatWindow, setChatWindow } = onChatWindow\n\n\tconst handleSubmit = (values, { setSubmitting, resetForm }) => {\n\t\tvalues = { ...values, time: moment(), type: \"text\", id: 8, sender: \"me\" }\n\t\tsetData(prev => [...prev, values])\n\t\tsetSubmitting(false)\n\t\tresetForm({})\n\t}\n\n\treturn (\n\t\t<StyledChat variants={cardVariants} animate=\"visible\" initial=\"hidden\">\n\t\t\t<HidingIcon onClick={() => setChatWindow(false)}>\n\t\t\t\t<Icon type=\"down\" />\n\t\t\t</HidingIcon>\n\n\t\t\t<Row gutter={16} type=\"flex\" align=\"middle\" className=\"receiver-bar\">\n\t\t\t\t<Col lg={6}>\n\t\t\t\t\t<Avatar src=\"https://source.unsplash.com/random/\" />\n\t\t\t\t</Col>\n\t\t\t\t<Col lg={18}>\n\t\t\t\t\t<ReceiverHeading content=\"Jane Doe\" subheader=\"44 minutes ago\" />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\n\t\t\t<Row type=\"flex\" justify=\"center\">\n\t\t\t\t<Col lg={22}>\n\t\t\t\t\t{(data || []).map(item => (\n\t\t\t\t\t\t<Bubble key={item.id} data={item} />\n\t\t\t\t\t))}\n\t\t\t\t\t<Section centered>\n\t\t\t\t\t\t<Typography.Text className=\"light-grey fs-09em\">End of conversation</Typography.Text>\n\t\t\t\t\t</Section>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\n\t\t\t<Formik onSubmit={handleSubmit} initialValues={{ message: \"\" }}>\n\t\t\t\t{({ handleSubmit }) => (\n\t\t\t\t\t<StyledForm layout=\"vertical\" className=\"px1em\" onSubmit={handleSubmit}>\n\t\t\t\t\t\t<TextInput className=\"message\" size=\"large\" mb=\"0\" name=\"message\" placeholder=\"Start your message...\" />\n\t\t\t\t\t</StyledForm>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</StyledChat>\n\t)\n}\n"],"sourceRoot":""}