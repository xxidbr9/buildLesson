{"version":3,"sources":["components/forms/RadioInput.jsx","components/forms/SliderInput.jsx","components/forms/MentionInput.jsx","components/forms/ToggleInput.jsx","pages/Tutor/Assignments/validation.jsx","pages/Tutor/Assignments/Post.jsx"],"names":["StyledRadioGroup","styled","Radio","Group","labelBlock","AntRadioGroup","RadioInput","options","name","label","independent","isButton","props","Item","buttonStyle","map","item","Button","value","key","SliderInput","extra","MentionInput","field","form","Option","id","ToggleInput","children","yup","mixed","default","validationSchema","shape","title","required","curriculumPvid","subjectPvid","priceRange","tutorGender","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailLayout","offset","autocomplete","theClient","newClient","withI18n","i18n","useState","addressValue","setAddressValue","setAddress","groups","setGroups","countryNotAppropriate","setCountryNotAppropriate","history","useHistory","useProgrammeList","experienceOptions","userDetails","JSON","parse","localStorage","getItem","country","symbol","countryMap","maxRange","pricePerHourRange","range","minRange","suggested","assignmentSuggestionRange","thirdPartyBasedOnCountry","thirdParties","filter","slice","toLowerCase","thirdPartyOptions","useLazyQuery","queryListPostingAssignment","client","fetchAssignmentList","useMutation","mutateAddPostingAssignment","onError","err","renderError","addPostingAssignment","handleLoad","types","componentRestrictions","google","maps","places","Autocomplete","document","getElementById","addListener","handlePlaceSelect","addressObject","getPlace","address_components","location","formatted_address","handleSelectGroup","option","opts","userPvid","Number","useEffect","countryFromApp","message","error","_","onClick","handleChangeLanguage","push","paddingHorizontal","type","justify","lg","className","DynamicIcon","size","bold","content","subheader","marginBottom","level","onSubmit","values","setSubmitting","isJoin","broadcast","startPrice","endPrice","trim","joinStudent","notes","remark","isActive","variables","then","finally","initialValues","handleSubmit","isValid","touched","TextInput","placeholder","SelectInput","levels","subjects","pricer","marks","tipFormatter","step","min","max","group","url","googleApiKey","onLoad","special","allowClear","address","onChange","e","target","disabled","onSelect","winners","CheckboxInput","textarea","rows"],"mappings":"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","file":"static/js/40.fc66b724.chunk.js","sourcesContent":["import React from \"react\"\nimport { FormItem, Radio } from \"formik-antd\"\nimport styled from \"styled-components\"\nimport { Form, Radio as AntdRadio } from \"antd\"\n\nconst StyledRadioGroup = styled(Radio.Group)`\n\t> label {\n\t\tdisplay: ${({ labelBlock }) => labelBlock && \"block\"};\n\t\twidth: ${({ labelBlock }) => labelBlock && \"100%\"};\n\t}\n`\n\nconst AntRadioGroup = styled(AntdRadio.Group)`\n\t> label {\n\t\tdisplay: ${({ labelBlock }) => labelBlock && \"block\"};\n\t\twidth: ${({ labelBlock }) => labelBlock && \"100%\"};\n\t\tmargin-bottom: ${({ labelBlock }) => labelBlock && \"1em\"};\n\t\tpadding: ${({ labelBlock }) => labelBlock && \"1em\"};\n\t\theight: ${({ labelBlock }) => labelBlock && \"auto\"};\n\t}\n`\n\nfunction RadioInput({ options = [], name, label, independent, isButton = true, ...props }) {\n\tif (independent) {\n\t\treturn (\n\t\t\t<Form.Item name={name} label={label}>\n\t\t\t\t<AntRadioGroup {...props} name={name} buttonStyle=\"solid\">\n\t\t\t\t\t{options.map((item) => (\n\t\t\t\t\t\t<AntdRadio.Button {...item} value={item.value} key={item.value}>\n\t\t\t\t\t\t\t{item.label}\n\t\t\t\t\t\t</AntdRadio.Button>\n\t\t\t\t\t))}\n\t\t\t\t</AntRadioGroup>\n\t\t\t</Form.Item>\n\t\t)\n\t}\n\n\treturn (\n\t\t<FormItem name={name} label={label}>\n\t\t\t{isButton ? (\n\t\t\t\t<StyledRadioGroup {...props} name={name} buttonStyle=\"solid\">\n\t\t\t\t\t{options.map((item) => (\n\t\t\t\t\t\t<Radio.Button value={item.value} key={item.value}>\n\t\t\t\t\t\t\t{item.label}\n\t\t\t\t\t\t</Radio.Button>\n\t\t\t\t\t))}\n\t\t\t\t</StyledRadioGroup>\n\t\t\t) : (\n\t\t\t\t<StyledRadioGroup {...props} options={options} name={name} />\n\t\t\t)}\n\t\t</FormItem>\n\t)\n}\n\nexport default RadioInput\n","import React from \"react\"\nimport { Slider, FormItem } from \"formik-antd\"\nimport \"antd/dist/antd.less\"\n\nexport default function SliderInput({ name, label, extra, ...props }) {\n\treturn (\n\t\t<FormItem name={name} label={label} extra={extra}>\n\t\t\t<Slider {...props} name={name} />\n\t\t</FormItem>\n\t)\n}\n","import React from \"react\"\nimport { Mentions, Form } from \"antd\"\n\nexport default function MentionInput({ field, form, label, options, name, independent, ...props }) {\n\tif (independent) {\n\t\treturn (\n\t\t\t<Form.Item name={name} label={label}>\n\t\t\t\t<Mentions {...props} name={name}>\n\t\t\t\t\t{(options || []).map(item => (\n\t\t\t\t\t\t<Mentions.Option key={item.value} id={item.id} value={item.value}>\n\t\t\t\t\t\t\t{item.label}\n\t\t\t\t\t\t</Mentions.Option>\n\t\t\t\t\t))}\n\t\t\t\t</Mentions>\n\t\t\t</Form.Item>\n\t\t)\n\t}\n\n\t// return (\n\t//     <FormItem\n\t//         name={field.name}\n\t//         label={label}\n\t//         help={submittedError || touchedError ? hasError : false}\n\t//         validateStatus={submittedError || touchedError ? \"error\" : \"success\"}\n\t//     >\n\t//         <Mentions {...field} {...props} onChange={onChange} onBlur={onBlur}>\n\t//             {(options || []).map(({ value, label }) => (\n\t//                 <Mentions.Option key={value}>{label}</Mentions.Option>\n\t//             ))}\n\t//         </Mentions>\n\t//     </FormItem>\n\t// )\n}\n","import React from \"react\"\nimport { Switch, FormItem } from \"formik-antd\"\nimport { Form, Switch as AntdSwitch } from \"antd\"\n\nexport default function ToggleInput({ name, children, label, independent, ...props }) {\n    if (independent) {\n        return (\n            <Form.Item name={name} label={label}>\n                <AntdSwitch {...props} name={name}>\n                    {children}\n                </AntdSwitch>\n            </Form.Item>\n        )\n    }\n\n    return (\n        <FormItem name={name} label={label}>\n            <Switch {...props} name={name}>\n                {children}\n            </Switch>\n        </FormItem>\n    )\n}\n","import * as yup from \"yup\"\n\nyup.setLocale({\n\tmixed: {\n\t\tdefault: \"Eheheheh\"\n\t}\n})\n\nexport const validationSchema = yup.object().shape({\n\ttitle: yup.string().required(`You have to fill in the title`),\n\tcurriculumPvid: yup.number().required(`You have to choose one of the curriculum`),\n\tsubjectPvid: yup.number().required(`You have to choose one of the subject`),\n\tpriceRange: yup.array().required(`You have to set the price range`),\n\ttutorGender: yup.number().required(`You have to choose your tutor's preferred gender`)\n})\n","import React, { useState, useEffect } from \"react\"\nimport { Layout, Heading, Section } from \"components\"\nimport { Row, Col, Form, message } from \"antd\"\nimport SelectInput from \"components/forms/SelectInput\"\nimport Script from \"react-load-script\"\nimport { useHistory } from \"react-router-dom\"\nimport RadioInput from \"components/forms/RadioInput\"\nimport { winners, thirdParties } from \"dummy\"\nimport MentionInput from \"components/forms/MentionInput\"\nimport ToggleInput from \"components/forms/ToggleInput\"\nimport { googleApiKey, newClient, pricer, renderError } from \"helpers\"\nimport TextInput from \"components/forms/TextInput\"\nimport SliderInput from \"components/forms/SliderInput\"\nimport { Formik } from \"formik\"\nimport { useMutation, useLazyQuery } from \"react-apollo\"\nimport { mutateAddPostingAssignment, queryListPostingAssignment } from \"queries/profile\"\nimport { SubmitButton } from \"formik-antd\"\nimport CheckboxInput from \"components/forms/CheckboxInput\"\nimport { validationSchema } from \"./validation\"\nimport { Trans, t } from \"@lingui/macro\"\nimport { withI18n } from \"@lingui/react\"\nimport { countryMap } from \"helpers/countryMapping\"\nimport { country as countryFromApp } from \"App\"\nimport { ButtonLink } from \"components\"\nimport { handleChangeLanguage } from \"App\"\nimport DynamicIcon from \"components/common/DynamicIcon\"\nimport { useProgrammeList } from \"helpers/hooks/data\"\n\nconst formItemLayout = {\n\tlabelCol: { xs: { span: 24 }, sm: { span: 8 } },\n\twrapperCol: { xs: { span: 24 }, sm: { span: 14 } }\n}\n\nconst tailLayout = {\n\twrapperCol: { xs: { span: 24, offset: 0 }, sm: { span: 14, offset: 8 } }\n}\n\nlet autocomplete = null\n\nconst theClient = newClient(\"posting_assignment\")\n\nfunction PostAssignment({ i18n }) {\n\tconst [addressValue, setAddressValue] = useState(\"\")\n\tconst [, setAddress] = useState({})\n\tconst [groups, setGroups] = useState([])\n\tconst [countryNotAppropriate, setCountryNotAppropriate] = useState(false)\n\tconst history = useHistory()\n\tconst { options } = useProgrammeList()\n\n\tconst experienceOptions = [\n\t\t{ value: \"> 1\", label: <Trans>> 1 year</Trans> },\n\t\t{ value: \"> 2\", label: <Trans>> 2 year</Trans> },\n\t\t{ value: \"> 3\", label: <Trans>> 3 year</Trans> },\n\t\t{ value: \"> 5\", label: <Trans>> 5 year</Trans> }\n\t]\n\n\tconst userDetails = JSON.parse(localStorage.getItem(\"userDetails\")) || {}\n\tconst country = userDetails.country || \"sg\"\n\tconst symbol = countryMap[country].symbol\n\tconst maxRange = countryMap[country].pricePerHourRange.range[1]\n\tconst minRange = countryMap[country].pricePerHourRange.range[0]\n\tconst suggested = countryMap[country].assignmentSuggestionRange\n\n\tconst constantThirdParties = [\n\t\t{ value: \"telegram\", label: \"Telegram\" },\n\t\t{ value: \"tutorsms\", label: \"TutorSMS\" }\n\t]\n\n\tconst thirdPartyBasedOnCountry = thirdParties.filter((item) => item.value.slice(0, 2).toLowerCase() === country)\n\tconst thirdPartyOptions = [...constantThirdParties, ...thirdPartyBasedOnCountry]\n\n\tconst [fetchAssignmentList] = useLazyQuery(queryListPostingAssignment, { client: theClient })\n\n\tconst [addPostingAssignment] = useMutation(mutateAddPostingAssignment, {\n\t\tclient: theClient,\n\t\tonError: (err) => renderError(err)\n\t})\n\n\tconst handleLoad = () => {\n\t\tconst options = { types: [], componentRestrictions: { country: userDetails.country } }\n\n\t\t/*global google*/\n\t\tautocomplete = new google.maps.places.Autocomplete(document.getElementById(\"location\"), options)\n\t\tautocomplete.addListener(\"place_changed\", handlePlaceSelect)\n\t}\n\n\tconst handlePlaceSelect = () => {\n\t\tconst addressObject = autocomplete.getPlace()\n\t\tconst userAddress = addressObject.address_components\n\n\t\tif (userAddress) {\n\t\t\tsetAddress({ location: addressObject.formatted_address })\n\t\t\tsetAddressValue(addressObject.formatted_address)\n\t\t}\n\t}\n\n\tconst handleSelectGroup = (option) => setGroups((opts) => [...opts, { userPvid: Number(option.id) }])\n\n\tconst handleAddPostingAssignment = (values, { setSubmitting }) => {\n\t\tconst { isJoin, priceRange, broadcast } = values\n\t\tconst range = [{ startPrice: priceRange[0], endPrice: priceRange[1] }]\n\t\tvalues = {\n\t\t\t...values,\n\t\t\tlocation: addressValue.trim(),\n\t\t\tjoinStudent: groups,\n\t\t\tisJoin: isJoin ? 1 : 0,\n\t\t\tpriceRange: range,\n\t\t\tnotes: values.notes || \"-\",\n\t\t\tbroadcast: broadcast.map((item) => ({ remark: item })),\n\t\t\tisActive: 1\n\t\t}\n\t\taddPostingAssignment({ variables: { ...values } })\n\t\t\t.then(() => {\n\t\t\t\tfetchAssignmentList()\n\t\t\t\thistory.push(`/${country}/assignments`)\n\t\t\t})\n\t\t\t.finally(() => setSubmitting(false))\n\t}\n\n\tuseEffect(() => {\n\t\tif (userDetails.country !== countryFromApp) {\n\t\t\tsetCountryNotAppropriate(true)\n\t\t\tmessage.error(\n\t\t\t\t<span>\n\t\t\t\t\t{i18n._(t`You can only post an assignment in`)} {countryMap[country].name}\n\t\t\t\t\t<ButtonLink onClick={() => handleChangeLanguage(userDetails.country)}>\n\t\t\t\t\t\t{i18n._(t`Switch to ${countryMap[country].name}?`)}\n\t\t\t\t\t</ButtonLink>\n\t\t\t\t</span>,\n\t\t\t\t0\n\t\t\t)\n\t\t}\n\n\t\tif (!localStorage.getItem(\"token\")) {\n\t\t\thistory.push(`/${country}/login`)\n\t\t}\n\t}, [history.push])\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Section paddingHorizontal={0}>\n\t\t\t\t<Row type=\"flex\" justify=\"center\">\n\t\t\t\t\t<Col lg={14}>\n\t\t\t\t\t\t<Row className=\"pt2em mb2em\">\n\t\t\t\t\t\t\t<Col lg={2}>\n\t\t\t\t\t\t\t\t<DynamicIcon type=\"icon-task\" size={34} />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col lg={20}>\n\t\t\t\t\t\t\t\t<Heading\n\t\t\t\t\t\t\t\t\tbold\n\t\t\t\t\t\t\t\t\tcontent={<Trans>Post an assignment</Trans>}\n\t\t\t\t\t\t\t\t\tsubheader={\n\t\t\t\t\t\t\t\t\t\t<Trans>Need to get tutors fast for your needs? Post an assignment, and they'll notice</Trans>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tmarginBottom=\"2em\"\n\t\t\t\t\t\t\t\t\tlevel={4}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\n\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\tonSubmit={handleAddPostingAssignment}\n\t\t\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\t\t\tpriceRange: [suggested[0], suggested[1]],\n\t\t\t\t\t\t\t\tbroadcast: [\"telegram\"],\n\t\t\t\t\t\t\t\ttutorGender: 1\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tvalidationSchema={validationSchema}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{({ handleSubmit, values, isValid, touched }) => (\n\t\t\t\t\t\t\t\t<Form {...formItemLayout} onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\t\t\tplaceholder={i18n._(t`E.g. Urgently need a mathematic tutor of Primary 4`)}\n\t\t\t\t\t\t\t\t\t\tlabel={<Trans>Title of the assignment</Trans>}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\t\t\t\tname=\"curriculumPvid\"\n\t\t\t\t\t\t\t\t\t\tlabel={<Trans>Select curriculum</Trans>}\n\t\t\t\t\t\t\t\t\t\tplaceholder={i18n._(t`Select curriculum`)}\n\t\t\t\t\t\t\t\t\t\toptions={options.levels}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\t\t\t\tname=\"subjectPvid\"\n\t\t\t\t\t\t\t\t\t\tlabel={<Trans>Select subject</Trans>}\n\t\t\t\t\t\t\t\t\t\tplaceholder={i18n._(t`Select subject`)}\n\t\t\t\t\t\t\t\t\t\toptions={options.subjects}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<SliderInput\n\t\t\t\t\t\t\t\t\t\trange\n\t\t\t\t\t\t\t\t\t\tname=\"priceRange\"\n\t\t\t\t\t\t\t\t\t\tlabel={<Trans>Preferred price</Trans>}\n\t\t\t\t\t\t\t\t\t\textra={\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"mb2em\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Trans>Suggestion price to set</Trans>:{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{symbol} {pricer(suggested[0])}{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t</strong>{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t-{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{symbol} {pricer(suggested[1])}{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tmarks={{\n\t\t\t\t\t\t\t\t\t\t\t[suggested[0]]: symbol + suggested[0],\n\t\t\t\t\t\t\t\t\t\t\t[suggested[1]]: symbol + suggested[1]\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\ttipFormatter={(value) => `${symbol}${pricer(value)}`}\n\t\t\t\t\t\t\t\t\t\tstep={countryMap[country].pricePerHourRange.step}\n\t\t\t\t\t\t\t\t\t\tmin={minRange}\n\t\t\t\t\t\t\t\t\t\tmax={maxRange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<RadioInput\n\t\t\t\t\t\t\t\t\t\tgroup\n\t\t\t\t\t\t\t\t\t\tname=\"tutorGender\"\n\t\t\t\t\t\t\t\t\t\tlabel={<Trans>Preferred gender</Trans>}\n\t\t\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t\t\t{ value: 1, label: <Trans>Male</Trans> },\n\t\t\t\t\t\t\t\t\t\t\t{ value: 0, label: <Trans>Female</Trans> }\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<RadioInput\n\t\t\t\t\t\t\t\t\t\tgroup\n\t\t\t\t\t\t\t\t\t\tname=\"tutorExperience\"\n\t\t\t\t\t\t\t\t\t\tlabel={<Trans>Tutor's experience</Trans>}\n\t\t\t\t\t\t\t\t\t\toptions={experienceOptions}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Script url={googleApiKey} onLoad={handleLoad} />\n\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\tspecial\n\t\t\t\t\t\t\t\t\t\tallowClear\n\t\t\t\t\t\t\t\t\t\tid=\"location\"\n\t\t\t\t\t\t\t\t\t\tname=\"address\"\n\t\t\t\t\t\t\t\t\t\tplaceholder={i18n._(t`Choose your preferred location...`)}\n\t\t\t\t\t\t\t\t\t\tlabel={<Trans>Preferred location</Trans>}\n\t\t\t\t\t\t\t\t\t\tvalue={addressValue}\n\t\t\t\t\t\t\t\t\t\terror={!addressValue && touched.address && <Trans>You have to tell your preferred location</Trans>}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAddressValue(e.target.value)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<ToggleInput name=\"isJoin\" label={<Trans>Allow others to join</Trans>}>\n\t\t\t\t\t\t\t\t\t\t<Trans>Allow heheh</Trans>\n\t\t\t\t\t\t\t\t\t</ToggleInput>\n\t\t\t\t\t\t\t\t\t<MentionInput\n\t\t\t\t\t\t\t\t\t\tindependent\n\t\t\t\t\t\t\t\t\t\tname=\"joinStudent\"\n\t\t\t\t\t\t\t\t\t\tlabel={\" \"}\n\t\t\t\t\t\t\t\t\t\tplaceholder={i18n._(t`Enter your friends' name`)}\n\t\t\t\t\t\t\t\t\t\tdisabled={!values.isJoin}\n\t\t\t\t\t\t\t\t\t\tonSelect={handleSelectGroup}\n\t\t\t\t\t\t\t\t\t\toptions={winners.map(({ name, id }) => ({ id, value: name, label: name }))}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\t\t\t\tgroup\n\t\t\t\t\t\t\t\t\t\tname=\"broadcast\"\n\t\t\t\t\t\t\t\t\t\tlabel={<Trans>Post this assignment to</Trans>}\n\t\t\t\t\t\t\t\t\t\toptions={thirdPartyOptions}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\ttextarea\n\t\t\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t\t\t\tname=\"notes\"\n\t\t\t\t\t\t\t\t\t\tplaceholder={i18n._(t`Some special notes regarding this assignment`)}\n\t\t\t\t\t\t\t\t\t\tlabel={<Trans>Additional notes</Trans>}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Form.Item {...tailLayout}>\n\t\t\t\t\t\t\t\t\t\t<SubmitButton type=\"primary\" disabled={!isValid || !addressValue || countryNotAppropriate}>\n\t\t\t\t\t\t\t\t\t\t\t<Trans>Post the assignment now</Trans>\n\t\t\t\t\t\t\t\t\t\t</SubmitButton>\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Formik>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Section>\n\t\t</Layout>\n\t)\n}\n\nexport default withI18n()(PostAssignment)\n"],"sourceRoot":""}